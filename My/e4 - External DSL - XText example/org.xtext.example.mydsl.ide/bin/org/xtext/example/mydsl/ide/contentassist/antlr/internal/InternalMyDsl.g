/*
 * generated by Xtext 2.29.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEntitySystem
entryRuleEntitySystem
:
{ before(grammarAccess.getEntitySystemRule()); }
	 ruleEntitySystem
{ after(grammarAccess.getEntitySystemRule()); } 
	 EOF 
;

// Rule EntitySystem
ruleEntitySystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntitySystemAccess().getGroup()); }
		(rule__EntitySystem__Group__0)
		{ after(grammarAccess.getEntitySystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalDefinition
entryRuleExternalDefinition
:
{ before(grammarAccess.getExternalDefinitionRule()); }
	 ruleExternalDefinition
{ after(grammarAccess.getExternalDefinitionRule()); } 
	 EOF 
;

// Rule ExternalDefinition
ruleExternalDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalDefinitionAccess().getGroup()); }
		(rule__ExternalDefinition__Group__0)
		{ after(grammarAccess.getExternalDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEntity
entryRuleEntity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getGroup()); }
		(rule__Attribute__Group__0)
		{ after(grammarAccess.getAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRequire
entryRuleRequire
:
{ before(grammarAccess.getRequireRule()); }
	 ruleRequire
{ after(grammarAccess.getRequireRule()); } 
	 EOF 
;

// Rule Require
ruleRequire 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequireAccess().getGroup()); }
		(rule__Require__Group__0)
		{ after(grammarAccess.getRequireAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall
:
{ before(grammarAccess.getFunctionCallRule()); }
	 ruleFunctionCall
{ after(grammarAccess.getFunctionCallRule()); } 
	 EOF 
;

// Rule FunctionCall
ruleFunctionCall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionCallAccess().getGroup()); }
		(rule__FunctionCall__Group__0)
		{ after(grammarAccess.getFunctionCallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarExp
entryRuleVarExp
:
{ before(grammarAccess.getVarExpRule()); }
	 ruleVarExp
{ after(grammarAccess.getVarExpRule()); } 
	 EOF 
;

// Rule VarExp
ruleVarExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarExpAccess().getGroup()); }
		(rule__VarExp__Group__0)
		{ after(grammarAccess.getVarExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getPlusOrMinusParserRuleCall()); }
		rulePlusOrMinus
		{ after(grammarAccess.getExpAccess().getPlusOrMinusParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus
:
{ before(grammarAccess.getPlusOrMinusRule()); }
	 rulePlusOrMinus
{ after(grammarAccess.getPlusOrMinusRule()); } 
	 EOF 
;

// Rule PlusOrMinus
rulePlusOrMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup()); }
		(rule__PlusOrMinus__Group__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTerm
entryRuleTerm
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAtomicParserRuleCall()); }
		ruleAtomic
		{ after(grammarAccess.getFactorAccess().getAtomicParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomic
entryRuleAtomic
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
		(rule__Atomic__Alternatives)
		{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getAlternatives()); }
		(rule__Relation__Alternatives)
		{ after(grammarAccess.getRelationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__ElementsAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySystemAccess().getElementsRelationParserRuleCall_3_0_0()); }
		ruleRelation
		{ after(grammarAccess.getEntitySystemAccess().getElementsRelationParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntitySystemAccess().getElementsEntityParserRuleCall_3_0_1()); }
		ruleEntity
		{ after(grammarAccess.getEntitySystemAccess().getElementsEntityParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ElementsAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getElementsAttributeParserRuleCall_2_0_0()); }
		ruleAttribute
		{ after(grammarAccess.getEntityAccess().getElementsAttributeParserRuleCall_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEntityAccess().getElementsRequireParserRuleCall_2_0_1()); }
		ruleRequire
		{ after(grammarAccess.getEntityAccess().getElementsRequireParserRuleCall_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__RequireAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getRequireFunctionCallParserRuleCall_1_0_0()); }
		ruleFunctionCall
		{ after(grammarAccess.getRequireAccess().getRequireFunctionCallParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRequireAccess().getRequireVarExpParserRuleCall_1_0_1()); }
		ruleVarExp
		{ after(grammarAccess.getRequireAccess().getRequireVarExpParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__OpAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarExpAccess().getOpEqualsSignEqualsSignKeyword_1_0_0()); }
		'=='
		{ after(grammarAccess.getVarExpAccess().getOpEqualsSignEqualsSignKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarExpAccess().getOpGreaterThanSignKeyword_1_0_1()); }
		'>'
		{ after(grammarAccess.getVarExpAccess().getOpGreaterThanSignKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getVarExpAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_2()); }
		'>='
		{ after(grammarAccess.getVarExpAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
		(rule__PlusOrMinus__Group_1_0_0__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
		(rule__PlusOrMinus__Group_1_0_1__0)
		{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
		(rule__Atomic__Group_0__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
		(rule__Atomic__Group_1__0)
		{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStringKeyword_0()); }
		'string'
		{ after(grammarAccess.getTypeAccess().getStringKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNumberKeyword_1()); }
		'number'
		{ after(grammarAccess.getTypeAccess().getNumberKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getGroup_0()); }
		(rule__Relation__Group_0__0)
		{ after(grammarAccess.getRelationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getGroup_1()); }
		(rule__Relation__Group_1__0)
		{ after(grammarAccess.getRelationAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getAKeyword_1_2_0()); }
		'a'
		{ after(grammarAccess.getRelationAccess().getAKeyword_1_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getManyFromAssignment_1_2_1()); }
		(rule__Relation__ManyFromAssignment_1_2_1)
		{ after(grammarAccess.getRelationAccess().getManyFromAssignment_1_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getHasKeyword_1_4_0()); }
		'has'
		{ after(grammarAccess.getRelationAccess().getHasKeyword_1_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getHaveKeyword_1_4_1()); }
		'have'
		{ after(grammarAccess.getRelationAccess().getHaveKeyword_1_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_1_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getAKeyword_1_5_0()); }
		'a'
		{ after(grammarAccess.getRelationAccess().getAKeyword_1_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getManyToAssignment_1_5_1()); }
		(rule__Relation__ManyToAssignment_1_5_1)
		{ after(grammarAccess.getRelationAccess().getManyToAssignment_1_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__0__Impl
	rule__EntitySystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySystemAccess().getSystemKeyword_0()); }
	'system'
	{ after(grammarAccess.getEntitySystemAccess().getSystemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__1__Impl
	rule__EntitySystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySystemAccess().getNameAssignment_1()); }
	(rule__EntitySystem__NameAssignment_1)
	{ after(grammarAccess.getEntitySystemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__2__Impl
	rule__EntitySystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntitySystemAccess().getExternalsAssignment_2()); }
	(rule__EntitySystem__ExternalsAssignment_2)*
	{ after(grammarAccess.getEntitySystemAccess().getExternalsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntitySystem__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEntitySystemAccess().getElementsAssignment_3()); }
		(rule__EntitySystem__ElementsAssignment_3)
		{ after(grammarAccess.getEntitySystemAccess().getElementsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getEntitySystemAccess().getElementsAssignment_3()); }
		(rule__EntitySystem__ElementsAssignment_3)*
		{ after(grammarAccess.getEntitySystemAccess().getElementsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group__0__Impl
	rule__ExternalDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getExternalKeyword_0()); }
	'external'
	{ after(grammarAccess.getExternalDefinitionAccess().getExternalKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group__1__Impl
	rule__ExternalDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getNameAssignment_1()); }
	(rule__ExternalDefinition__NameAssignment_1)
	{ after(grammarAccess.getExternalDefinitionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group__2__Impl
	rule__ExternalDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getExternalDefinitionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group__3__Impl
	rule__ExternalDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getGroup_3()); }
	(rule__ExternalDefinition__Group_3__0)?
	{ after(grammarAccess.getExternalDefinitionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getExternalDefinitionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group_3__0__Impl
	rule__ExternalDefinition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getTypesAssignment_3_0()); }
	(rule__ExternalDefinition__TypesAssignment_3_0)
	{ after(grammarAccess.getExternalDefinitionAccess().getTypesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getGroup_3_1()); }
	(rule__ExternalDefinition__Group_3_1__0)*
	{ after(grammarAccess.getExternalDefinitionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDefinition__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group_3_1__0__Impl
	rule__ExternalDefinition__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getExternalDefinitionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDefinition__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefinitionAccess().getTypesAssignment_3_1_1()); }
	(rule__ExternalDefinition__TypesAssignment_3_1_1)
	{ after(grammarAccess.getExternalDefinitionAccess().getTypesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getElementsAssignment_2()); }
	(rule__Entity__ElementsAssignment_2)*
	{ after(grammarAccess.getEntityAccess().getElementsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
	'attribute'
	{ after(grammarAccess.getAttributeAccess().getAttributeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
	(rule__Attribute__NameAssignment_1)
	{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getAsKeyword_2()); }
	'as'
	{ after(grammarAccess.getAttributeAccess().getAsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
	(rule__Attribute__TypeAssignment_3)
	{ after(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Require__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__0__Impl
	rule__Require__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
	'require'
	{ after(grammarAccess.getRequireAccess().getRequireKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Require__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRequireAccess().getRequireAssignment_1()); }
	(rule__Require__RequireAssignment_1)
	{ after(grammarAccess.getRequireAccess().getRequireAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__0__Impl
	rule__FunctionCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
	(rule__FunctionCall__FunctionAssignment_0)
	{ after(grammarAccess.getFunctionCallAccess().getFunctionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__1__Impl
	rule__FunctionCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__2__Impl
	rule__FunctionCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2()); }
	(rule__FunctionCall__Group_2__0)?
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__0__Impl
	rule__FunctionCall__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getVariablesAssignment_2_0()); }
	(rule__FunctionCall__VariablesAssignment_2_0)
	{ after(grammarAccess.getFunctionCallAccess().getVariablesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
	(rule__FunctionCall__Group_2_1__0)*
	{ after(grammarAccess.getFunctionCallAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionCall__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__0__Impl
	rule__FunctionCall__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FunctionCall__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionCallAccess().getVariablesAssignment_2_1_1()); }
	(rule__FunctionCall__VariablesAssignment_2_1_1)
	{ after(grammarAccess.getFunctionCallAccess().getVariablesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VarExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarExp__Group__0__Impl
	rule__VarExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarExpAccess().getVarRefAssignment_0()); }
	(rule__VarExp__VarRefAssignment_0)
	{ after(grammarAccess.getVarExpAccess().getVarRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarExp__Group__1__Impl
	rule__VarExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarExpAccess().getOpAssignment_1()); }
	(rule__VarExp__OpAssignment_1)
	{ after(grammarAccess.getVarExpAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VarExp__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarExpAccess().getExpAssignment_2()); }
	(rule__VarExp__ExpAssignment_2)
	{ after(grammarAccess.getVarExpAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__0__Impl
	rule__PlusOrMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getTermParserRuleCall_0()); }
	ruleTerm
	{ after(grammarAccess.getPlusOrMinusAccess().getTermParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
	(rule__PlusOrMinus__Group_1__0)*
	{ after(grammarAccess.getPlusOrMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__0__Impl
	rule__PlusOrMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
	(rule__PlusOrMinus__Alternatives_1_0)
	{ after(grammarAccess.getPlusOrMinusAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
	(rule__PlusOrMinus__RightAssignment_1_1)
	{ after(grammarAccess.getPlusOrMinusAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__0__Impl
	rule__PlusOrMinus__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
	'+'
	{ after(grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOrMinus__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__0__Impl
	rule__PlusOrMinus__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
	()
	{ after(grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusOrMinus__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
	'-'
	{ after(grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getTermAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getMultLeftAction_1_0()); }
	()
	{ after(grammarAccess.getTermAccess().getMultLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
	rule__Term__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAsteriskKeyword_1_1()); }
	'*'
	{ after(grammarAccess.getTermAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
	(rule__Term__RightAssignment_1_2)
	{ after(grammarAccess.getTermAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getNumberAction_0_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getNumberAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
	(rule__Atomic__ValueAssignment_0_1)
	{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getParenthesisAction_1_0()); }
	()
	{ after(grammarAccess.getAtomicAccess().getParenthesisAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__1__Impl
	rule__Atomic__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_1_1()); }
	'('
	{ after(grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__2__Impl
	rule__Atomic__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getExpAssignment_1_2()); }
	(rule__Atomic__ExpAssignment_1_2)
	{ after(grammarAccess.getAtomicAccess().getExpAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Atomic__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getAtomicAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0__0__Impl
	rule__Relation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getInheritanceAction_0_0()); }
	()
	{ after(grammarAccess.getRelationAccess().getInheritanceAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0__1__Impl
	rule__Relation__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationKeyword_0_1()); }
	'relation'
	{ after(grammarAccess.getRelationAccess().getRelationKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0__2__Impl
	rule__Relation__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getBaseEntityAssignment_0_2()); }
	(rule__Relation__BaseEntityAssignment_0_2)
	{ after(grammarAccess.getRelationAccess().getBaseEntityAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0__3__Impl
	rule__Relation__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getIsKeyword_0_3()); }
	'is'
	{ after(grammarAccess.getRelationAccess().getIsKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getSuperEntityAssignment_0_4()); }
	(rule__Relation__SuperEntityAssignment_0_4)
	{ after(grammarAccess.getRelationAccess().getSuperEntityAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__0__Impl
	rule__Relation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAssociationAction_1_0()); }
	()
	{ after(grammarAccess.getRelationAccess().getAssociationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__1__Impl
	rule__Relation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getRelationKeyword_1_1()); }
	'relation'
	{ after(grammarAccess.getRelationAccess().getRelationKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__2__Impl
	rule__Relation__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAlternatives_1_2()); }
	(rule__Relation__Alternatives_1_2)?
	{ after(grammarAccess.getRelationAccess().getAlternatives_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__3__Impl
	rule__Relation__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getFromAssignment_1_3()); }
	(rule__Relation__FromAssignment_1_3)
	{ after(grammarAccess.getRelationAccess().getFromAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__4__Impl
	rule__Relation__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAlternatives_1_4()); }
	(rule__Relation__Alternatives_1_4)
	{ after(grammarAccess.getRelationAccess().getAlternatives_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__5__Impl
	rule__Relation__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAlternatives_1_5()); }
	(rule__Relation__Alternatives_1_5)?
	{ after(grammarAccess.getRelationAccess().getAlternatives_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_1__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getToAssignment_1_6()); }
	(rule__Relation__ToAssignment_1_6)
	{ after(grammarAccess.getRelationAccess().getToAssignment_1_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntitySystem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySystemAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntitySystemAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__ExternalsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySystemAccess().getExternalsExternalDefinitionParserRuleCall_2_0()); }
		ruleExternalDefinition
		{ after(grammarAccess.getEntitySystemAccess().getExternalsExternalDefinitionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntitySystem__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntitySystemAccess().getElementsAlternatives_3_0()); }
		(rule__EntitySystem__ElementsAlternatives_3_0)
		{ after(grammarAccess.getEntitySystemAccess().getElementsAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalDefinitionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__TypesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefinitionAccess().getTypesTypeParserRuleCall_3_0_0()); }
		ruleType
		{ after(grammarAccess.getExternalDefinitionAccess().getTypesTypeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDefinition__TypesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefinitionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
		ruleType
		{ after(grammarAccess.getExternalDefinitionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__ElementsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getElementsAlternatives_2_0()); }
		(rule__Entity__ElementsAlternatives_2_0)
		{ after(grammarAccess.getEntityAccess().getElementsAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Require__RequireAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRequireAccess().getRequireAlternatives_1_0()); }
		(rule__Require__RequireAlternatives_1_0)
		{ after(grammarAccess.getRequireAccess().getRequireAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__FunctionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getFunctionExternalDefinitionCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getFunctionExternalDefinitionIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getFunctionExternalDefinitionIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getFunctionExternalDefinitionCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__VariablesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getVariablesAttributeCrossReference_2_0_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getVariablesAttributeIDTerminalRuleCall_2_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getVariablesAttributeIDTerminalRuleCall_2_0_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getVariablesAttributeCrossReference_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionCall__VariablesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionCallAccess().getVariablesAttributeCrossReference_2_1_1_0()); }
		(
			{ before(grammarAccess.getFunctionCallAccess().getVariablesAttributeIDTerminalRuleCall_2_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFunctionCallAccess().getVariablesAttributeIDTerminalRuleCall_2_1_1_0_1()); }
		)
		{ after(grammarAccess.getFunctionCallAccess().getVariablesAttributeCrossReference_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__VarRefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarExpAccess().getVarRefAttributeCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVarExpAccess().getVarRefAttributeIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarExpAccess().getVarRefAttributeIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVarExpAccess().getVarRefAttributeCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarExpAccess().getOpAlternatives_1_0()); }
		(rule__VarExp__OpAlternatives_1_0)
		{ after(grammarAccess.getVarExpAccess().getOpAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarExp__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarExpAccess().getExpExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getVarExpAccess().getExpExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOrMinus__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusOrMinusAccess().getRightTermParserRuleCall_1_1_0()); }
		ruleTerm
		{ after(grammarAccess.getPlusOrMinusAccess().getRightTermParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); }
		ruleFactor
		{ after(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ExpAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicAccess().getExpExpParserRuleCall_1_2_0()); }
		ruleExp
		{ after(grammarAccess.getAtomicAccess().getExpExpParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__BaseEntityAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getBaseEntityEntityCrossReference_0_2_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getBaseEntityEntityIDTerminalRuleCall_0_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getBaseEntityEntityIDTerminalRuleCall_0_2_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getBaseEntityEntityCrossReference_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__SuperEntityAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getSuperEntityEntityCrossReference_0_4_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getSuperEntityEntityIDTerminalRuleCall_0_4_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getSuperEntityEntityIDTerminalRuleCall_0_4_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getSuperEntityEntityCrossReference_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ManyFromAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getManyFromManyKeyword_1_2_1_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getManyFromManyKeyword_1_2_1_0()); }
			'many'
			{ after(grammarAccess.getRelationAccess().getManyFromManyKeyword_1_2_1_0()); }
		)
		{ after(grammarAccess.getRelationAccess().getManyFromManyKeyword_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__FromAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getFromEntityCrossReference_1_3_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getFromEntityIDTerminalRuleCall_1_3_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getFromEntityIDTerminalRuleCall_1_3_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getFromEntityCrossReference_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ManyToAssignment_1_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getManyToManyKeyword_1_5_1_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getManyToManyKeyword_1_5_1_0()); }
			'many'
			{ after(grammarAccess.getRelationAccess().getManyToManyKeyword_1_5_1_0()); }
		)
		{ after(grammarAccess.getRelationAccess().getManyToManyKeyword_1_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__ToAssignment_1_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getToEntityCrossReference_1_6_0()); }
		(
			{ before(grammarAccess.getRelationAccess().getToEntityIDTerminalRuleCall_1_6_0_1()); }
			RULE_ID
			{ after(grammarAccess.getRelationAccess().getToEntityIDTerminalRuleCall_1_6_0_1()); }
		)
		{ after(grammarAccess.getRelationAccess().getToEntityCrossReference_1_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
