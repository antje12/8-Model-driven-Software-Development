/*
 * generated by Xtext 2.29.0
 */
package org.xtext.example.mydsl.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.xbase.lib.util.ReflectExtensions
import org.eclipse.xtext.xbase.testing.CompilationTestHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith

@ExtendWith(InjectionExtension)
@InjectWith(MyDslInjectorProvider)

class MyDslValidationTest {
    
    @Inject extension CompilationTestHelper
    @Inject extension ReflectExtensions
    
    @Test
    def void simplestProgram() {'''
            system University
            entity Person
        '''.assertCompilesTo('''
        package university;
        
        import java.util.*;
        
        public class Person {
            
            private ExternalCode externalCode;
        
            public Person(ExternalCode externalCode) {
                this.externalCode = externalCode;
            }
        }
        ''' 
        )
    }
    
    @Test
    def void workingTest() {'''
            system University
            entity Person
                attribute name as string
        '''.assertCompilesTo('''
        package university;
        
        import java.util.*;
        
        public class Person {
            
            private ExternalCode externalCode;
        
            private String name;
        
            public Person(ExternalCode externalCode, String name) {
                this.externalCode = externalCode;
                this.setName(name);
            }
            public String getName() {
                return name;
            }
            public void setName(String name) {
                this.name = name;
            }
            
        }
        ''' 
        )
    }
    
    @Test
    def void multipleFile() {'''
            system University
            entity Person
                attribute name as string
            entity Teacher
        '''.assertCompilesTo('''
        MULTIPLE FILES WERE GENERATED
        
        File 1 : /myProject/./src-gen/university/Person.java
        
        package university;
        
        import java.util.*;
        
        public class Person {
            
            private ExternalCode externalCode;
        
            private String name;
        
            public Person(ExternalCode externalCode, String name) {
                this.externalCode = externalCode;
                this.setName(name);
            }
            public String getName() {
                return name;
            }
            public void setName(String name) {
                this.name = name;
            }
            
        }
        
        File 2 : /myProject/./src-gen/university/Teacher.java
        
        package university;
        
        import java.util.*;
        
        public class Teacher {
            
            private ExternalCode externalCode;
        
        
            public Teacher(ExternalCode externalCode, ) {
                this.externalCode = externalCode;
            }
            
        }
        ''' 
        )
    }
    
    @Test
    def void multipleFile2() {'''
            system University
            entity Person
                attribute name as string
            entity Teacher
        '''.compile[
            Assertions.assertEquals('''
            package university;
            
            import java.util.*;
            
            public class Person {
            
            private ExternalCode externalCode;
            
            private String name;
            
            public Person(ExternalCode externalCode, String name) {
                this.externalCode = externalCode;
                this.setName(name);
            }
            public String getName() {
                return name;
            }
            public void setName(String name) {
                this.name = name;
            }
            
            }
            '''
                , getAllGeneratedResources.get("/myProject/./src-gen/university/Person.java")
            )
        ]
    }
    
    @Test
    def void metaprogramming1() {'''
            system University
            entity Person
                attribute name as string
        '''.compile[
            val person = getCompiledClass("university.Person").getDeclaredConstructor({String}).newInstance("my name")
            Assertions.assertEquals("my name", person.invoke("getName"))
        ]
        }
    
    //Another way of testing assignment 3: checking values
    @Test
    def void mathExample1() {'''
            program Test
            var x = 1 + 2
        '''.compile[
            val mathExp = getCompiledClass("math_expression.Test").getDeclaredConstructor.newInstance
            mathExp.invoke("compute")
            Assertions.assertEquals(3, mathExp.get("x"))
        ]
    }
    
    //Another way of testing assignment 3; checking the source code
    @Test
    def void mathExample2() {'''
            program Test
            var x = 1 + 2
        '''.assertCompilesTo('''
            //code
            public void compute() {
                this.x = 1 + 2;
            }
            //code
        ''')
    }
}
