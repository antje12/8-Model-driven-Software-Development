/*
 * generated by Xtext 2.29.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "EntitySystem";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEntitySystem
entryRuleEntitySystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntitySystemRule()); }
	iv_ruleEntitySystem=ruleEntitySystem
	{ $current=$iv_ruleEntitySystem.current; }
	EOF;

// Rule EntitySystem
ruleEntitySystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='system'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntitySystemAccess().getSystemKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntitySystemAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntitySystemRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEntitySystemAccess().getExternalsExternalDefinitionParserRuleCall_2_0());
				}
				lv_externals_2_0=ruleExternalDefinition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntitySystemRule());
					}
					add(
						$current,
						"externals",
						lv_externals_2_0,
						"org.xtext.example.mydsl.MyDsl.ExternalDefinition");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEntitySystemAccess().getElementsRelationParserRuleCall_3_0_0());
					}
					lv_elements_3_1=ruleRelation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitySystemRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_1,
							"org.xtext.example.mydsl.MyDsl.Relation");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEntitySystemAccess().getElementsEntityParserRuleCall_3_0_1());
					}
					lv_elements_3_2=ruleEntity
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntitySystemRule());
						}
						add(
							$current,
							"elements",
							lv_elements_3_2,
							"org.xtext.example.mydsl.MyDsl.Entity");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)+
	)
;

// Entry rule entryRuleExternalDefinition
entryRuleExternalDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalDefinitionRule()); }
	iv_ruleExternalDefinition=ruleExternalDefinition
	{ $current=$iv_ruleExternalDefinition.current; }
	EOF;

// Rule ExternalDefinition
ruleExternalDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='external'
		{
			newLeafNode(otherlv_0, grammarAccess.getExternalDefinitionAccess().getExternalKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getExternalDefinitionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalDefinitionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getExternalDefinitionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getExternalDefinitionAccess().getTypesTypeParserRuleCall_3_0_0());
					}
					lv_types_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExternalDefinitionRule());
						}
						add(
							$current,
							"types",
							lv_types_3_0,
							"org.xtext.example.mydsl.MyDsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getExternalDefinitionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getExternalDefinitionAccess().getTypesTypeParserRuleCall_3_1_1_0());
						}
						lv_types_5_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getExternalDefinitionRule());
							}
							add(
								$current,
								"types",
								lv_types_5_0,
								"org.xtext.example.mydsl.MyDsl.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getExternalDefinitionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getEntityAccess().getElementsAttributeParserRuleCall_2_0_0());
					}
					lv_elements_2_1=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_1,
							"org.xtext.example.mydsl.MyDsl.Attribute");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getEntityAccess().getElementsRequireParserRuleCall_2_0_1());
					}
					lv_elements_2_2=ruleRequire
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEntityRule());
						}
						add(
							$current,
							"elements",
							lv_elements_2_2,
							"org.xtext.example.mydsl.MyDsl.Require");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='attribute'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeAccess().getAttributeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='as'
		{
			newLeafNode(otherlv_2, grammarAccess.getAttributeAccess().getAsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeAccess().getTypeTypeParserRuleCall_3_0());
				}
				lv_type_3_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"org.xtext.example.mydsl.MyDsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleRequire
entryRuleRequire returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRequireRule()); }
	iv_ruleRequire=ruleRequire
	{ $current=$iv_ruleRequire.current; }
	EOF;

// Rule Require
ruleRequire returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='require'
		{
			newLeafNode(otherlv_0, grammarAccess.getRequireAccess().getRequireKeyword_0());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getRequireAccess().getRequireFunctionCallParserRuleCall_1_0_0());
					}
					lv_require_1_1=ruleFunctionCall
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequireRule());
						}
						set(
							$current,
							"require",
							lv_require_1_1,
							"org.xtext.example.mydsl.MyDsl.FunctionCall");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getRequireAccess().getRequireVarExpParserRuleCall_1_0_1());
					}
					lv_require_1_2=ruleVarExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRequireRule());
						}
						set(
							$current,
							"require",
							lv_require_1_2,
							"org.xtext.example.mydsl.MyDsl.VarExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFunctionCall
entryRuleFunctionCall returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionCallRule()); }
	iv_ruleFunctionCall=ruleFunctionCall
	{ $current=$iv_ruleFunctionCall.current; }
	EOF;

// Rule FunctionCall
ruleFunctionCall returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionCallRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFunctionCallAccess().getFunctionExternalDefinitionCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFunctionCallAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getFunctionCallRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getFunctionCallAccess().getVariablesAttributeCrossReference_2_0_0());
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFunctionCallAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFunctionCallRule());
							}
						}
						otherlv_4=RULE_ID
						{
							newLeafNode(otherlv_4, grammarAccess.getFunctionCallAccess().getVariablesAttributeCrossReference_2_1_1_0());
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFunctionCallAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleVarExp
entryRuleVarExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVarExpRule()); }
	iv_ruleVarExp=ruleVarExp
	{ $current=$iv_ruleVarExp.current; }
	EOF;

// Rule VarExp
ruleVarExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVarExpRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getVarExpAccess().getVarRefAttributeCrossReference_0_0());
				}
			)
		)
		(
			(
				(
					lv_op_1_1='=='
					{
						newLeafNode(lv_op_1_1, grammarAccess.getVarExpAccess().getOpEqualsSignEqualsSignKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarExpRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_1, null);
					}
					    |
					lv_op_1_2='>'
					{
						newLeafNode(lv_op_1_2, grammarAccess.getVarExpAccess().getOpGreaterThanSignKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarExpRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_2, null);
					}
					    |
					lv_op_1_3='>='
					{
						newLeafNode(lv_op_1_3, grammarAccess.getVarExpAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVarExpRule());
						}
						setWithLastConsumed($current, "op", lv_op_1_3, null);
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVarExpAccess().getExpExpParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVarExpRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"org.xtext.example.mydsl.MyDsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpAccess().getPlusOrMinusParserRuleCall());
	}
	this_PlusOrMinus_0=rulePlusOrMinus
	{
		$current = $this_PlusOrMinus_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRulePlusOrMinus
entryRulePlusOrMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusOrMinusRule()); }
	iv_rulePlusOrMinus=rulePlusOrMinus
	{ $current=$iv_rulePlusOrMinus.current; }
	EOF;

// Rule PlusOrMinus
rulePlusOrMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusOrMinusAccess().getTermParserRuleCall_0());
		}
		this_Term_0=ruleTerm
		{
			$current = $this_Term_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getPlusLeftAction_1_0_0_0(),
								$current);
						}
					)
					otherlv_2='+'
					{
						newLeafNode(otherlv_2, grammarAccess.getPlusOrMinusAccess().getPlusSignKeyword_1_0_0_1());
					}
				)
				    |
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getPlusOrMinusAccess().getMinusLeftAction_1_0_1_0(),
								$current);
						}
					)
					otherlv_4='-'
					{
						newLeafNode(otherlv_4, grammarAccess.getPlusOrMinusAccess().getHyphenMinusKeyword_1_0_1_1());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusOrMinusAccess().getRightTermParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleTerm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusOrMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.xtext.example.mydsl.MyDsl.Term");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	iv_ruleTerm=ruleTerm
	{ $current=$iv_ruleTerm.current; }
	EOF;

// Rule Term
ruleTerm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getTermAccess().getMultLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='*'
			{
				newLeafNode(otherlv_2, grammarAccess.getTermAccess().getAsteriskKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTermAccess().getRightFactorParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTermRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.MyDsl.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getFactorAccess().getAtomicParserRuleCall());
	}
	this_Atomic_0=ruleAtomic
	{
		$current = $this_Atomic_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleAtomic
entryRuleAtomic returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicRule()); }
	iv_ruleAtomic=ruleAtomic
	{ $current=$iv_ruleAtomic.current; }
	EOF;

// Rule Atomic
ruleAtomic returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getNumberAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getAtomicAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAtomicRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAtomicAccess().getParenthesisAction_1_0(),
						$current);
				}
			)
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getAtomicAccess().getLeftParenthesisKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicAccess().getExpExpParserRuleCall_1_2_0());
					}
					lv_exp_4_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicRule());
						}
						set(
							$current,
							"exp",
							lv_exp_4_0,
							"org.xtext.example.mydsl.MyDsl.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getAtomicAccess().getRightParenthesisKeyword_1_3());
			}
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getStringKeyword_0());
		}
		    |
		kw='number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getNumberKeyword_1());
		}
	)
;

// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	iv_ruleRelation=ruleRelation
	{ $current=$iv_ruleRelation.current; }
	EOF;

// Rule Relation
ruleRelation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRelationAccess().getInheritanceAction_0_0(),
						$current);
				}
			)
			otherlv_1='relation'
			{
				newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getRelationKeyword_0_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getBaseEntityEntityCrossReference_0_2_0());
					}
				)
			)
			otherlv_3='is'
			{
				newLeafNode(otherlv_3, grammarAccess.getRelationAccess().getIsKeyword_0_3());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
					}
					otherlv_4=RULE_ID
					{
						newLeafNode(otherlv_4, grammarAccess.getRelationAccess().getSuperEntityEntityCrossReference_0_4_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getRelationAccess().getAssociationAction_1_0(),
						$current);
				}
			)
			otherlv_6='relation'
			{
				newLeafNode(otherlv_6, grammarAccess.getRelationAccess().getRelationKeyword_1_1());
			}
			(
				otherlv_7='a'
				{
					newLeafNode(otherlv_7, grammarAccess.getRelationAccess().getAKeyword_1_2_0());
				}
				    |
				(
					(
						lv_manyFrom_8_0='many'
						{
							newLeafNode(lv_manyFrom_8_0, grammarAccess.getRelationAccess().getManyFromManyKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationRule());
							}
							setWithLastConsumed($current, "manyFrom", lv_manyFrom_8_0 != null, "many");
						}
					)
				)
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getRelationAccess().getFromEntityCrossReference_1_3_0());
					}
				)
			)
			(
				otherlv_10='has'
				{
					newLeafNode(otherlv_10, grammarAccess.getRelationAccess().getHasKeyword_1_4_0());
				}
				    |
				otherlv_11='have'
				{
					newLeafNode(otherlv_11, grammarAccess.getRelationAccess().getHaveKeyword_1_4_1());
				}
			)
			(
				otherlv_12='a'
				{
					newLeafNode(otherlv_12, grammarAccess.getRelationAccess().getAKeyword_1_5_0());
				}
				    |
				(
					(
						lv_manyTo_13_0='many'
						{
							newLeafNode(lv_manyTo_13_0, grammarAccess.getRelationAccess().getManyToManyKeyword_1_5_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRelationRule());
							}
							setWithLastConsumed($current, "manyTo", lv_manyTo_13_0 != null, "many");
						}
					)
				)
			)?
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRelationRule());
						}
					}
					otherlv_14=RULE_ID
					{
						newLeafNode(otherlv_14, grammarAccess.getRelationAccess().getToEntityCrossReference_1_6_0());
					}
				)
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
