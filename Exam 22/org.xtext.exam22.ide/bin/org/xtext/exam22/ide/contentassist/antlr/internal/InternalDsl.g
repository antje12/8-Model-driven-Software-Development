/*
 * generated by Xtext 2.29.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.exam22.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.exam22.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.exam22.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScenario
entryRuleScenario
:
{ before(grammarAccess.getScenarioRule()); }
	 ruleScenario
{ after(grammarAccess.getScenarioRule()); } 
	 EOF 
;

// Rule Scenario
ruleScenario 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScenarioAccess().getGroup()); }
		(rule__Scenario__Group__0)
		{ after(grammarAccess.getScenarioAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDef
entryRuleVariableDef
:
{ before(grammarAccess.getVariableDefRule()); }
	 ruleVariableDef
{ after(grammarAccess.getVariableDefRule()); } 
	 EOF 
;

// Rule VariableDef
ruleVariableDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDefAccess().getGroup()); }
		(rule__VariableDef__Group__0)
		{ after(grammarAccess.getVariableDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnnounce
entryRuleAnnounce
:
{ before(grammarAccess.getAnnounceRule()); }
	 ruleAnnounce
{ after(grammarAccess.getAnnounceRule()); } 
	 EOF 
;

// Rule Announce
ruleAnnounce 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnnounceAccess().getGroup()); }
		(rule__Announce__Group__0)
		{ after(grammarAccess.getAnnounceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQuestion
entryRuleQuestion
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQuestionAccess().getGroup()); }
		(rule__Question__Group__0)
		{ after(grammarAccess.getQuestionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnd
entryRuleEnd
:
{ before(grammarAccess.getEndRule()); }
	 ruleEnd
{ after(grammarAccess.getEndRule()); } 
	 EOF 
;

// Rule End
ruleEnd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndAccess().getGroup()); }
		(rule__End__Group__0)
		{ after(grammarAccess.getEndAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTarget
entryRuleTarget
:
{ before(grammarAccess.getTargetRule()); }
	 ruleTarget
{ after(grammarAccess.getTargetRule()); } 
	 EOF 
;

// Rule Target
ruleTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetAccess().getGroup()); }
		(rule__Target__Group__0)
		{ after(grammarAccess.getTargetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEndingTarget
entryRuleEndingTarget
:
{ before(grammarAccess.getEndingTargetRule()); }
	 ruleEndingTarget
{ after(grammarAccess.getEndingTargetRule()); } 
	 EOF 
;

// Rule EndingTarget
ruleEndingTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEndingTargetAccess().getGroup()); }
		(rule__EndingTarget__Group__0)
		{ after(grammarAccess.getEndingTargetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getBooleanParserRuleCall()); }
		ruleBoolean
		{ after(grammarAccess.getExpAccess().getBooleanParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getGroup()); }
		(rule__Boolean__Group__0)
		{ after(grammarAccess.getBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqual
entryRuleEqual
:
{ before(grammarAccess.getEqualRule()); }
	 ruleEqual
{ after(grammarAccess.getEqualRule()); } 
	 EOF 
;

// Rule Equal
ruleEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualAccess().getGroup()); }
		(rule__Equal__Group__0)
		{ after(grammarAccess.getEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare
entryRuleCompare
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareAccess().getGroup()); }
		(rule__Compare__Group__0)
		{ after(grammarAccess.getCompareAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcat
entryRuleConcat
:
{ before(grammarAccess.getConcatRule()); }
	 ruleConcat
{ after(grammarAccess.getConcatRule()); } 
	 EOF 
;

// Rule Concat
ruleConcat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatAccess().getGroup()); }
		(rule__Concat__Group__0)
		{ after(grammarAccess.getConcatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinus
entryRulePlusMinus
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusAccess().getGroup()); }
		(rule__PlusMinus__Group__0)
		{ after(grammarAccess.getPlusMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDiv
entryRuleMultDiv
:
{ before(grammarAccess.getMultDivRule()); }
	 ruleMultDiv
{ after(grammarAccess.getMultDivRule()); } 
	 EOF 
;

// Rule MultDiv
ruleMultDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup()); }
		(rule__MultDiv__Group__0)
		{ after(grammarAccess.getMultDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getVariablesAssignment_4_0()); }
		(rule__Scenario__VariablesAssignment_4_0)
		{ after(grammarAccess.getScenarioAccess().getVariablesAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getScenarioAccess().getStatementsAssignment_4_1()); }
		(rule__Scenario__StatementsAssignment_4_1)
		{ after(grammarAccess.getScenarioAccess().getStatementsAssignment_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAnnounceParserRuleCall_0()); }
		ruleAnnounce
		{ after(grammarAccess.getStatementAccess().getAnnounceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getQuestionParserRuleCall_1()); }
		ruleQuestion
		{ after(grammarAccess.getStatementAccess().getQuestionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEndParserRuleCall_2()); }
		ruleEnd
		{ after(grammarAccess.getStatementAccess().getEndParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getBooleanKeyword_0()); }
		'boolean'
		{ after(grammarAccess.getTypeAccess().getBooleanKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getTextKeyword_1()); }
		'text'
		{ after(grammarAccess.getTypeAccess().getTextKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNumberKeyword_2()); }
		'number'
		{ after(grammarAccess.getTypeAccess().getNumberKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }
		'&&'
		{ after(grammarAccess.getBooleanAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_1()); }
		'||'
		{ after(grammarAccess.getBooleanAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getOpLessThanSignKeyword_1_1_0_0()); }
		'<'
		{ after(grammarAccess.getCompareAccess().getOpLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
		'>'
		{ after(grammarAccess.getCompareAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
		'<='
		{ after(grammarAccess.getCompareAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		'>='
		{ after(grammarAccess.getCompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getPlusMinusAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusMinusAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getPlusMinusAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_0()); }
		(rule__Primitive__Group_0__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_1()); }
		(rule__Primitive__Group_1__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_2()); }
		(rule__Primitive__Group_2__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_3()); }
		(rule__Primitive__Group_3__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_4()); }
		(rule__Primitive__Group_4__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_5()); }
		(rule__Primitive__Group_5__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_6()); }
		(rule__Primitive__Group_6__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_7()); }
		(rule__Primitive__Group_7__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_8()); }
		(rule__Primitive__Group_8__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueTrueKeyword_2_1_0_0()); }
		'true'
		{ after(grammarAccess.getPrimitiveAccess().getValueTrueKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueFalseKeyword_2_1_0_1()); }
		'false'
		{ after(grammarAccess.getPrimitiveAccess().getValueFalseKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getStoryKeyword_0()); }
	'story'
	{ after(grammarAccess.getModelAccess().getStoryKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getNameAssignment_1()); }
	(rule__Model__NameAssignment_1)
	{ after(grammarAccess.getModelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getFunctionsAssignment_2()); }
	(rule__Model__FunctionsAssignment_2)*
	{ after(grammarAccess.getModelAccess().getFunctionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getScenariosAssignment_3()); }
	(rule__Model__ScenariosAssignment_3)*
	{ after(grammarAccess.getModelAccess().getScenariosAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6()); }
	(rule__Function__ReturnTypeAssignment_6)
	{ after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_3_0()); }
	(rule__Function__TypesAssignment_3_0)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_1()); }
	(rule__Function__Group_3_1__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__0__Impl
	rule__Function__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_3_1_1()); }
	(rule__Function__TypesAssignment_3_1_1)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__0__Impl
	rule__Scenario__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
	'scenario'
	{ after(grammarAccess.getScenarioAccess().getScenarioKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__1__Impl
	rule__Scenario__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
	(rule__Scenario__NameAssignment_1)
	{ after(grammarAccess.getScenarioAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__2__Impl
	rule__Scenario__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_2()); }
	(rule__Scenario__Group_2__0)?
	{ after(grammarAccess.getScenarioAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__3__Impl
	rule__Scenario__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getScenarioAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__4__Impl
	rule__Scenario__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getAlternatives_4()); }
	(rule__Scenario__Alternatives_4)*
	{ after(grammarAccess.getScenarioAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getScenarioAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2__0__Impl
	rule__Scenario__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getScenarioAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2__1__Impl
	rule__Scenario__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_2_1()); }
	(rule__Scenario__Group_2_1__0)?
	{ after(grammarAccess.getScenarioAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getScenarioAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2_1__0__Impl
	rule__Scenario__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getParametersAssignment_2_1_0()); }
	(rule__Scenario__ParametersAssignment_2_1_0)
	{ after(grammarAccess.getScenarioAccess().getParametersAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getGroup_2_1_1()); }
	(rule__Scenario__Group_2_1_1__0)*
	{ after(grammarAccess.getScenarioAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scenario__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2_1_1__0__Impl
	rule__Scenario__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getScenarioAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scenario__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScenarioAccess().getParametersAssignment_2_1_1_1()); }
	(rule__Scenario__ParametersAssignment_2_1_1_1)
	{ after(grammarAccess.getScenarioAccess().getParametersAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__0__Impl
	rule__VariableDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableDefAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__1__Impl
	rule__VariableDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getNameAssignment_1()); }
	(rule__VariableDef__NameAssignment_1)
	{ after(grammarAccess.getVariableDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__2__Impl
	rule__VariableDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getVariableDefAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDef__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDefAccess().getTypeAssignment_3()); }
	(rule__VariableDef__TypeAssignment_3)
	{ after(grammarAccess.getVariableDefAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Announce__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__0__Impl
	rule__Announce__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getAnnounceKeyword_0()); }
	'announce'
	{ after(grammarAccess.getAnnounceAccess().getAnnounceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__1__Impl
	rule__Announce__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getNameAssignment_1()); }
	(rule__Announce__NameAssignment_1)
	{ after(grammarAccess.getAnnounceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__2__Impl
	rule__Announce__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnnounceAccess().getExpressionAssignment_2()); }
	(rule__Announce__ExpressionAssignment_2)
	{ after(grammarAccess.getAnnounceAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Announce__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getAnnounceAccess().getTargetsAssignment_3()); }
		(rule__Announce__TargetsAssignment_3)
		{ after(grammarAccess.getAnnounceAccess().getTargetsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getAnnounceAccess().getTargetsAssignment_3()); }
		(rule__Announce__TargetsAssignment_3)*
		{ after(grammarAccess.getAnnounceAccess().getTargetsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
	'question'
	{ after(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
	(rule__Question__NameAssignment_1)
	{ after(grammarAccess.getQuestionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getExpressionAssignment_2()); }
	(rule__Question__ExpressionAssignment_2)
	{ after(grammarAccess.getQuestionAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getAsKeyword_3()); }
	'as'
	{ after(grammarAccess.getQuestionAccess().getAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getOutputAssignment_4()); }
	(rule__Question__OutputAssignment_4)
	{ after(grammarAccess.getQuestionAccess().getOutputAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__5__Impl
	rule__Question__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getGroup_5()); }
	(rule__Question__Group_5__0)?
	{ after(grammarAccess.getQuestionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
		(rule__Question__TargetsAssignment_6)
		{ after(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
	)
	(
		{ before(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
		(rule__Question__TargetsAssignment_6)*
		{ after(grammarAccess.getQuestionAccess().getTargetsAssignment_6()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group_5__0__Impl
	rule__Question__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getInKeyword_5_0()); }
	'in'
	{ after(grammarAccess.getQuestionAccess().getInKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Question__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQuestionAccess().getVariableAssignment_5_1()); }
	(rule__Question__VariableAssignment_5_1)
	{ after(grammarAccess.getQuestionAccess().getVariableAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__End__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__End__Group__0__Impl
	rule__End__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAccess().getEndKeyword_0()); }
	'end'
	{ after(grammarAccess.getEndAccess().getEndKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__End__Group__1__Impl
	rule__End__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAccess().getNameAssignment_1()); }
	(rule__End__NameAssignment_1)
	{ after(grammarAccess.getEndAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__End__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__End__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndAccess().getExpressionAssignment_2()); }
	(rule__End__ExpressionAssignment_2)?
	{ after(grammarAccess.getEndAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__0__Impl
	rule__Target__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getToKeyword_0()); }
	'to'
	{ after(grammarAccess.getTargetAccess().getToKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__1__Impl
	rule__Target__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getToAssignment_1()); }
	(rule__Target__ToAssignment_1)
	{ after(grammarAccess.getTargetAccess().getToAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__2__Impl
	rule__Target__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getGroup_2()); }
	(rule__Target__Group_2__0)?
	{ after(grammarAccess.getTargetAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__3__Impl
	rule__Target__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getGroup_3()); }
	(rule__Target__Group_3__0)?
	{ after(grammarAccess.getTargetAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getGroup_4()); }
	(rule__Target__Group_4__0)?
	{ after(grammarAccess.getTargetAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2__0__Impl
	rule__Target__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getTargetAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2__1__Impl
	rule__Target__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getGroup_2_1()); }
	(rule__Target__Group_2_1__0)?
	{ after(grammarAccess.getTargetAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getTargetAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2_1__0__Impl
	rule__Target__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getExpressionsAssignment_2_1_0()); }
	(rule__Target__ExpressionsAssignment_2_1_0)
	{ after(grammarAccess.getTargetAccess().getExpressionsAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getGroup_2_1_1()); }
	(rule__Target__Group_2_1_1__0)*
	{ after(grammarAccess.getTargetAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2_1_1__0__Impl
	rule__Target__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getTargetAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getExpressionsAssignment_2_1_1_1()); }
	(rule__Target__ExpressionsAssignment_2_1_1_1)
	{ after(grammarAccess.getTargetAccess().getExpressionsAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_3__0__Impl
	rule__Target__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getIfKeyword_3_0()); }
	'if'
	{ after(grammarAccess.getTargetAccess().getIfKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getConditionAssignment_3_1()); }
	(rule__Target__ConditionAssignment_3_1)
	{ after(grammarAccess.getTargetAccess().getConditionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Target__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_4__0__Impl
	rule__Target__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getLeftCurlyBracketKeyword_4_0()); }
	'{'
	{ after(grammarAccess.getTargetAccess().getLeftCurlyBracketKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_4__1__Impl
	rule__Target__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getTargetAccess().getEndingTargetsAssignment_4_1()); }
		(rule__Target__EndingTargetsAssignment_4_1)
		{ after(grammarAccess.getTargetAccess().getEndingTargetsAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getTargetAccess().getEndingTargetsAssignment_4_1()); }
		(rule__Target__EndingTargetsAssignment_4_1)*
		{ after(grammarAccess.getTargetAccess().getEndingTargetsAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Target__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetAccess().getRightCurlyBracketKeyword_4_2()); }
	'}'
	{ after(grammarAccess.getTargetAccess().getRightCurlyBracketKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EndingTarget__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndingTarget__Group__0__Impl
	rule__EndingTarget__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndingTargetAccess().getOnKeyword_0()); }
	'on'
	{ after(grammarAccess.getEndingTargetAccess().getOnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndingTarget__Group__1__Impl
	rule__EndingTarget__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndingTargetAccess().getEndAssignment_1()); }
	(rule__EndingTarget__EndAssignment_1)
	{ after(grammarAccess.getEndingTargetAccess().getEndAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EndingTarget__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEndingTargetAccess().getTargetAssignment_2()); }
	(rule__EndingTarget__TargetAssignment_2)
	{ after(grammarAccess.getEndingTargetAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__0__Impl
	rule__Boolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getEqualParserRuleCall_0()); }
	ruleEqual
	{ after(grammarAccess.getBooleanAccess().getEqualParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getGroup_1()); }
	(rule__Boolean__Group_1__0)*
	{ after(grammarAccess.getBooleanAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group_1__0__Impl
	rule__Boolean__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getBooleanLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanAccess().getBooleanLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group_1__1__Impl
	rule__Boolean__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getOpAssignment_1_1()); }
	(rule__Boolean__OpAssignment_1_1)
	{ after(grammarAccess.getBooleanAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getRightAssignment_1_2()); }
	(rule__Boolean__RightAssignment_1_2)
	{ after(grammarAccess.getBooleanAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__0__Impl
	rule__Equal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getCompareParserRuleCall_0()); }
	ruleCompare
	{ after(grammarAccess.getEqualAccess().getCompareParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getGroup_1()); }
	(rule__Equal__Group_1__0)*
	{ after(grammarAccess.getEqualAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group_1__0__Impl
	rule__Equal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getEqualLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualAccess().getEqualLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group_1__1__Impl
	rule__Equal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getOpAssignment_1_1()); }
	(rule__Equal__OpAssignment_1_1)
	{ after(grammarAccess.getEqualAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getRightAssignment_1_2()); }
	(rule__Equal__RightAssignment_1_2)
	{ after(grammarAccess.getEqualAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__0__Impl
	rule__Compare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getConcatParserRuleCall_0()); }
	ruleConcat
	{ after(grammarAccess.getCompareAccess().getConcatParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGroup_1()); }
	(rule__Compare__Group_1__0)*
	{ after(grammarAccess.getCompareAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__0__Impl
	rule__Compare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getCompareLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getCompareLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__1__Impl
	rule__Compare__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getOpAssignment_1_1()); }
	(rule__Compare__OpAssignment_1_1)
	{ after(grammarAccess.getCompareAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getRightAssignment_1_2()); }
	(rule__Compare__RightAssignment_1_2)
	{ after(grammarAccess.getCompareAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__0__Impl
	rule__Concat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getPlusMinusParserRuleCall_0()); }
	rulePlusMinus
	{ after(grammarAccess.getConcatAccess().getPlusMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getGroup_1()); }
	(rule__Concat__Group_1__0)*
	{ after(grammarAccess.getConcatAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__0__Impl
	rule__Concat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getConcatLeftAction_1_0()); }
	()
	{ after(grammarAccess.getConcatAccess().getConcatLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__1__Impl
	rule__Concat__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getAmpersandKeyword_1_1()); }
	'&'
	{ after(grammarAccess.getConcatAccess().getAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getRightAssignment_1_2()); }
	(rule__Concat__RightAssignment_1_2)
	{ after(grammarAccess.getConcatAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__0__Impl
	rule__PlusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getMultDivParserRuleCall_0()); }
	ruleMultDiv
	{ after(grammarAccess.getPlusMinusAccess().getMultDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getGroup_1()); }
	(rule__PlusMinus__Group_1__0)*
	{ after(grammarAccess.getPlusMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__0__Impl
	rule__PlusMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getPlusMinusLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPlusMinusAccess().getPlusMinusLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__1__Impl
	rule__PlusMinus__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getOpAssignment_1_1()); }
	(rule__PlusMinus__OpAssignment_1_1)
	{ after(grammarAccess.getPlusMinusAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getRightAssignment_1_2()); }
	(rule__PlusMinus__RightAssignment_1_2)
	{ after(grammarAccess.getPlusMinusAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__0__Impl
	rule__MultDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getPrimitiveParserRuleCall_0()); }
	rulePrimitive
	{ after(grammarAccess.getMultDivAccess().getPrimitiveParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getGroup_1()); }
	(rule__MultDiv__Group_1__0)*
	{ after(grammarAccess.getMultDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__0__Impl
	rule__MultDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getMultDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultDivAccess().getMultDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__1__Impl
	rule__MultDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getOpAssignment_1_1()); }
	(rule__MultDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMultDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getRightAssignment_1_2()); }
	(rule__MultDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMultDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_0__0__Impl
	rule__Primitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_0_1()); }
	(rule__Primitive__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_1__0__Impl
	rule__Primitive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_1_1()); }
	(rule__Primitive__ValueAssignment_1_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__0__Impl
	rule__Primitive__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getBoolConstantAction_2_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getBoolConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_2_1()); }
	(rule__Primitive__ValueAssignment_2_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__0__Impl
	rule__Primitive__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getNotAction_3_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getNotAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__1__Impl
	rule__Primitive__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExclamationMarkKeyword_3_1()); }
	'!'
	{ after(grammarAccess.getPrimitiveAccess().getExclamationMarkKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpAssignment_3_2()); }
	(rule__Primitive__ExpAssignment_3_2)
	{ after(grammarAccess.getPrimitiveAccess().getExpAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_4__0__Impl
	rule__Primitive__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getTypeConstantAction_4_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getTypeConstantAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getTypeAssignment_4_1()); }
	(rule__Primitive__TypeAssignment_4_1)
	{ after(grammarAccess.getPrimitiveAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_5__0__Impl
	rule__Primitive__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getThisAction_5_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getThisAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getThisKeyword_5_1()); }
	'this'
	{ after(grammarAccess.getPrimitiveAccess().getThisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__0__Impl
	rule__Primitive__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getVarRefAction_6_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getVarRefAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRefAssignment_6_1()); }
	(rule__Primitive__RefAssignment_6_1)
	{ after(grammarAccess.getPrimitiveAccess().getRefAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__0__Impl
	rule__Primitive__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getFuncCallAction_7_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getFuncCallAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__1__Impl
	rule__Primitive__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRefAssignment_7_1()); }
	(rule__Primitive__RefAssignment_7_1)
	{ after(grammarAccess.getPrimitiveAccess().getRefAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__2__Impl
	rule__Primitive__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_7_2()); }
	'('
	{ after(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__3__Impl
	rule__Primitive__Group_7__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getGroup_7_3()); }
	(rule__Primitive__Group_7_3__0)?
	{ after(grammarAccess.getPrimitiveAccess().getGroup_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_7_4()); }
	')'
	{ after(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_7_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_7_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7_3__0__Impl
	rule__Primitive__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpressionsAssignment_7_3_0()); }
	(rule__Primitive__ExpressionsAssignment_7_3_0)
	{ after(grammarAccess.getPrimitiveAccess().getExpressionsAssignment_7_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getGroup_7_3_1()); }
	(rule__Primitive__Group_7_3_1__0)*
	{ after(grammarAccess.getPrimitiveAccess().getGroup_7_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_7_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7_3_1__0__Impl
	rule__Primitive__Group_7_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getCommaKeyword_7_3_1_0()); }
	','
	{ after(grammarAccess.getPrimitiveAccess().getCommaKeyword_7_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpressionsAssignment_7_3_1_1()); }
	(rule__Primitive__ExpressionsAssignment_7_3_1_1)
	{ after(grammarAccess.getPrimitiveAccess().getExpressionsAssignment_7_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_8__0__Impl
	rule__Primitive__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getParenthesisAction_8_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getParenthesisAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_8__1__Impl
	rule__Primitive__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_8_1()); }
	'('
	{ after(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_8__2__Impl
	rule__Primitive__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpAssignment_8_2()); }
	(rule__Primitive__ExpAssignment_8_2)
	{ after(grammarAccess.getPrimitiveAccess().getExpAssignment_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_8__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_8_3()); }
	')'
	{ after(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_8_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getModelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__FunctionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_2_0()); }
		ruleFunction
		{ after(grammarAccess.getModelAccess().getFunctionsFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__ScenariosAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getScenariosScenarioParserRuleCall_3_0()); }
		ruleScenario
		{ after(grammarAccess.getModelAccess().getScenariosScenarioParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ReturnTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getReturnTypeTypeParserRuleCall_6_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getReturnTypeTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getScenarioAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ParametersAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
		ruleParameter
		{ after(grammarAccess.getScenarioAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__ParametersAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getScenarioAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__VariablesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getVariablesVariableDefParserRuleCall_4_0_0()); }
		ruleVariableDef
		{ after(grammarAccess.getScenarioAccess().getVariablesVariableDefParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scenario__StatementsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScenarioAccess().getStatementsStatementParserRuleCall_4_1_0()); }
		ruleStatement
		{ after(grammarAccess.getScenarioAccess().getStatementsStatementParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDef__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDefAccess().getTypeTypeParserRuleCall_3_0()); }
		ruleType
		{ after(grammarAccess.getVariableDefAccess().getTypeTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnounceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAnnounceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnounceAccess().getExpressionExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getAnnounceAccess().getExpressionExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Announce__TargetsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnnounceAccess().getTargetsTargetParserRuleCall_3_0()); }
		ruleTarget
		{ after(grammarAccess.getAnnounceAccess().getTargetsTargetParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getQuestionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getExpressionExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getQuestionAccess().getExpressionExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__OutputAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getOutputExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getQuestionAccess().getOutputExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__VariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getVariableVariableDefCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getQuestionAccess().getVariableVariableDefIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getQuestionAccess().getVariableVariableDefIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getQuestionAccess().getVariableVariableDefCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__TargetsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQuestionAccess().getTargetsTargetParserRuleCall_6_0()); }
		ruleTarget
		{ after(grammarAccess.getQuestionAccess().getTargetsTargetParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEndAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__End__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndAccess().getExpressionExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getEndAccess().getExpressionExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__ToAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getToCrossRefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getTargetAccess().getToCrossRefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getTargetAccess().getToCrossRefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getTargetAccess().getToCrossRefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__ExpressionsAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getExpressionsExpParserRuleCall_2_1_0_0()); }
		ruleExp
		{ after(grammarAccess.getTargetAccess().getExpressionsExpParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__ExpressionsAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getExpressionsExpParserRuleCall_2_1_1_1_0()); }
		ruleExp
		{ after(grammarAccess.getTargetAccess().getExpressionsExpParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__ConditionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getConditionExpParserRuleCall_3_1_0()); }
		ruleExp
		{ after(grammarAccess.getTargetAccess().getConditionExpParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Target__EndingTargetsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetAccess().getEndingTargetsEndingTargetParserRuleCall_4_1_0()); }
		ruleEndingTarget
		{ after(grammarAccess.getTargetAccess().getEndingTargetsEndingTargetParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__EndAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndingTargetAccess().getEndEndCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEndingTargetAccess().getEndEndIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEndingTargetAccess().getEndEndIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEndingTargetAccess().getEndEndCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EndingTarget__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEndingTargetAccess().getTargetTargetParserRuleCall_2_0()); }
		ruleTarget
		{ after(grammarAccess.getEndingTargetAccess().getTargetTargetParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getOpAlternatives_1_1_0()); }
		(rule__Boolean__OpAlternatives_1_1_0)
		{ after(grammarAccess.getBooleanAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getRightEqualParserRuleCall_1_2_0()); }
		ruleEqual
		{ after(grammarAccess.getBooleanAccess().getRightEqualParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getOpAlternatives_1_1_0()); }
		(rule__Equal__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getRightCompareParserRuleCall_1_2_0()); }
		ruleCompare
		{ after(grammarAccess.getEqualAccess().getRightCompareParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getOpAlternatives_1_1_0()); }
		(rule__Compare__OpAlternatives_1_1_0)
		{ after(grammarAccess.getCompareAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_2_0()); }
		ruleConcat
		{ after(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getRightPlusMinusParserRuleCall_1_2_0()); }
		rulePlusMinus
		{ after(grammarAccess.getConcatAccess().getRightPlusMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getOpAlternatives_1_1_0()); }
		(rule__PlusMinus__OpAlternatives_1_1_0)
		{ after(grammarAccess.getPlusMinusAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getRightMultDivParserRuleCall_1_2_0()); }
		ruleMultDiv
		{ after(grammarAccess.getPlusMinusAccess().getRightMultDivParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MultDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMultDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getRightPrimitiveParserRuleCall_1_2_0()); }
		rulePrimitive
		{ after(grammarAccess.getMultDivAccess().getRightPrimitiveParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimitiveAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueAlternatives_2_1_0()); }
		(rule__Primitive__ValueAlternatives_2_1_0)
		{ after(grammarAccess.getPrimitiveAccess().getValueAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_3_2_0()); }
		rulePrimitive
		{ after(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getTypeTypeParserRuleCall_4_1_0()); }
		ruleType
		{ after(grammarAccess.getPrimitiveAccess().getTypeTypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__RefAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getRefCrossRefCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getPrimitiveAccess().getRefCrossRefIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimitiveAccess().getRefCrossRefIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getPrimitiveAccess().getRefCrossRefCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__RefAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getRefFunctionCrossReference_7_1_0()); }
		(
			{ before(grammarAccess.getPrimitiveAccess().getRefFunctionIDTerminalRuleCall_7_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimitiveAccess().getRefFunctionIDTerminalRuleCall_7_1_0_1()); }
		)
		{ after(grammarAccess.getPrimitiveAccess().getRefFunctionCrossReference_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpressionsAssignment_7_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpressionsExpParserRuleCall_7_3_0_0()); }
		ruleExp
		{ after(grammarAccess.getPrimitiveAccess().getExpressionsExpParserRuleCall_7_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpressionsAssignment_7_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpressionsExpParserRuleCall_7_3_1_1_0()); }
		ruleExp
		{ after(grammarAccess.getPrimitiveAccess().getExpressionsExpParserRuleCall_7_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpAssignment_8_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpExpParserRuleCall_8_2_0()); }
		ruleExp
		{ after(grammarAccess.getPrimitiveAccess().getExpExpParserRuleCall_8_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
