/*
 * generated by Xtext 2.29.0
 */
package org.xtext.exam22.scoping


import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.xtext.exam22.dsl.EndingTarget
import org.eclipse.xtext.EcoreUtil2
import org.xtext.exam22.dsl.Target
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.scoping.IScope

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class DslScopeProvider extends AbstractDslScopeProvider {

    override IScope getScope(EObject context, EReference reference) {
		return context.scopeForEObject(reference)
    }
	
	def dispatch IScope scopeForEObject(EObject context, EReference reference) {
		return super.getScope(context, reference)
	}
	
	def dispatch IScope scopeForEObject(EndingTarget endingTarget, EReference reference) {
        val container = EcoreUtil2.getContainerOfType(endingTarget, Target)
        Scopes.scopeFor(#[container], container.to.scopeForEObject(reference))
	}
}
