/**
 * generated by Xtext 2.29.0
 */
package org.xtext.ui23.generator;

import com.google.common.collect.Iterators;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.xtext.ui23.dsl.Form;
import org.xtext.ui23.dsl.UI23;

@SuppressWarnings("all")
public class DslGenerator extends AbstractGenerator {
  public static int panelCreate = 0;

  public static int panelCall = 0;

  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    final UI23 model = Iterators.<UI23>filter(resource.getAllContents(), UI23.class).next();
    final String name = model.getName();
    final String[] names = name.split("(?=[A-Z])");
    final String pkg = String.join("_", names).toLowerCase();
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("/user_interface/common/Form.java");
    fsa.generateFile(_builder.toString(), 
      CommonGenerator.generateCommon());
    final Form init = model.getForms().get(0);
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("/user_interface/");
    _builder_1.append(pkg);
    _builder_1.append("/UserInterface.java");
    fsa.generateFile(_builder_1.toString(), 
      UserInterfaceGenerator.generateUserInterface(pkg, model, init));
    boolean _isEmpty = model.getFunctions().isEmpty();
    boolean _not = (!_isEmpty);
    if (_not) {
      StringConcatenation _builder_2 = new StringConcatenation();
      _builder_2.append("/user_interface/");
      _builder_2.append(pkg);
      _builder_2.append("/External.java");
      fsa.generateFile(_builder_2.toString(), 
        ExternalGenerator.generateExternal(pkg, model));
    }
    DslGenerator.panelCreate = 0;
    DslGenerator.panelCall = 0;
    EList<Form> _forms = model.getForms();
    for (final Form form : _forms) {
      StringConcatenation _builder_3 = new StringConcatenation();
      _builder_3.append("/user_interface/");
      _builder_3.append(pkg);
      _builder_3.append("/");
      String _name = form.getName();
      _builder_3.append(_name);
      _builder_3.append("Form.java");
      fsa.generateFile(_builder_3.toString(), 
        FormGenerator.generateForm(pkg, model, form));
    }
  }
}
