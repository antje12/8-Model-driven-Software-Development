/*
 * generated by Xtext 2.29.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.ui23.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.ui23.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.ui23.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "UI23";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleUI23
entryRuleUI23 returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUI23Rule()); }
	iv_ruleUI23=ruleUI23
	{ $current=$iv_ruleUI23.current; }
	EOF;

// Rule UI23
ruleUI23 returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='title'
		{
			newLeafNode(otherlv_0, grammarAccess.getUI23Access().getTitleKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getUI23Access().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getUI23Rule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getUI23Access().getFunctionsFunctionParserRuleCall_2_0());
				}
				lv_functions_2_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUI23Rule());
					}
					add(
						$current,
						"functions",
						lv_functions_2_0,
						"org.xtext.ui23.Dsl.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getUI23Access().getFormsFormParserRuleCall_3_0());
				}
				lv_forms_3_0=ruleForm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUI23Rule());
					}
					add(
						$current,
						"forms",
						lv_forms_3_0,
						"org.xtext.ui23.Dsl.Form");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='function'
		{
			newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getFunctionKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0());
					}
					lv_types_3_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"types",
							lv_types_3_0,
							"org.xtext.ui23.Dsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0());
						}
						lv_types_5_0=ruleType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"types",
								lv_types_5_0,
								"org.xtext.ui23.Dsl.Type");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getFunctionAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFunctionAccess().getReturnTypeTypeParserRuleCall_6_0());
				}
				lv_returnType_8_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFunctionRule());
					}
					set(
						$current,
						"returnType",
						lv_returnType_8_0,
						"org.xtext.ui23.Dsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleForm
entryRuleForm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormRule()); }
	iv_ruleForm=ruleForm
	{ $current=$iv_ruleForm.current; }
	EOF;

// Rule Form
ruleForm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='form'
		{
			newLeafNode(otherlv_0, grammarAccess.getFormAccess().getFormKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='('
			{
				newLeafNode(otherlv_2, grammarAccess.getFormAccess().getLeftParenthesisKeyword_2_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_0_0());
						}
						lv_parameters_3_0=ruleParameter
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFormRule());
							}
							add(
								$current,
								"parameters",
								lv_parameters_3_0,
								"org.xtext.ui23.Dsl.Parameter");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_4=','
					{
						newLeafNode(otherlv_4, grammarAccess.getFormAccess().getCommaKeyword_2_1_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_1_1_0());
							}
							lv_parameters_5_0=ruleParameter
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getFormRule());
								}
								add(
									$current,
									"parameters",
									lv_parameters_5_0,
									"org.xtext.ui23.Dsl.Parameter");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_6=')'
			{
				newLeafNode(otherlv_6, grammarAccess.getFormAccess().getRightParenthesisKeyword_2_2());
			}
		)?
		otherlv_7='{'
		{
			newLeafNode(otherlv_7, grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_4_0());
				}
				lv_layout_8_0=ruleLayout
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFormRule());
					}
					set(
						$current,
						"layout",
						lv_layout_8_0,
						"org.xtext.ui23.Dsl.Layout");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getFormAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleLayout
entryRuleLayout returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLayoutRule()); }
	iv_ruleLayout=ruleLayout
	{ $current=$iv_ruleLayout.current; }
	EOF;

// Rule Layout
ruleLayout returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLayoutAccess().getLayoutAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_axis_1_1='row'
					{
						newLeafNode(lv_axis_1_1, grammarAccess.getLayoutAccess().getAxisRowKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLayoutRule());
						}
						setWithLastConsumed($current, "axis", lv_axis_1_1, null);
					}
					    |
					lv_axis_1_2='column'
					{
						newLeafNode(lv_axis_1_2, grammarAccess.getLayoutAccess().getAxisColumnKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getLayoutRule());
						}
						setWithLastConsumed($current, "axis", lv_axis_1_2, null);
					}
				)
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLayoutAccess().getComponentsComponentParserRuleCall_3_0());
				}
				lv_components_3_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLayoutRule());
					}
					add(
						$current,
						"components",
						lv_components_3_0,
						"org.xtext.ui23.Dsl.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getComponentAccess().getLayoutParserRuleCall_0());
		}
		this_Layout_0=ruleLayout
		{
			$current = $this_Layout_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getElementParserRuleCall_1());
		}
		this_Element_1=ruleElement
		{
			$current = $this_Element_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getComponentAccess().getFormUseParserRuleCall_2());
		}
		this_FormUse_2=ruleFormUse
		{
			$current = $this_FormUse_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleElement
entryRuleElement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementRule()); }
	iv_ruleElement=ruleElement
	{ $current=$iv_ruleElement.current; }
	EOF;

// Rule Element
ruleElement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementAccess().getLabelParserRuleCall_0());
		}
		this_Label_0=ruleLabel
		{
			$current = $this_Label_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getInputTextParserRuleCall_1());
		}
		this_InputText_1=ruleInputText
		{
			$current = $this_InputText_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementAccess().getButtonParserRuleCall_2());
		}
		this_Button_2=ruleButton
		{
			$current = $this_Button_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLabel
entryRuleLabel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLabelRule()); }
	iv_ruleLabel=ruleLabel
	{ $current=$iv_ruleLabel.current; }
	EOF;

// Rule Label
ruleLabel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='label'
		{
			newLeafNode(otherlv_0, grammarAccess.getLabelAccess().getLabelKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getLabelAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLabelAccess().getExpExpParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLabelRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"org.xtext.ui23.Dsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInputText
entryRuleInputText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInputTextRule()); }
	iv_ruleInputText=ruleInputText
	{ $current=$iv_ruleInputText.current; }
	EOF;

// Rule InputText
ruleInputText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='input'
		{
			newLeafNode(otherlv_0, grammarAccess.getInputTextAccess().getInputKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getInputTextAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInputTextRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getInputTextAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInputTextAccess().getExpExpParserRuleCall_3_0());
				}
				lv_exp_3_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInputTextRule());
					}
					set(
						$current,
						"exp",
						lv_exp_3_0,
						"org.xtext.ui23.Dsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleButton
entryRuleButton returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getButtonRule()); }
	iv_ruleButton=ruleButton
	{ $current=$iv_ruleButton.current; }
	EOF;

// Rule Button
ruleButton returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='button'
		{
			newLeafNode(otherlv_0, grammarAccess.getButtonAccess().getButtonKeyword_0());
		}
		(
			(
				lv_validate_1_0='*'
				{
					newLeafNode(lv_validate_1_0, grammarAccess.getButtonAccess().getValidateAsteriskKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed($current, "validate", lv_validate_1_0, "*");
				}
			)
		)?
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getButtonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getButtonAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getButtonAccess().getExpExpParserRuleCall_4_0());
				}
				lv_exp_4_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getButtonRule());
					}
					set(
						$current,
						"exp",
						lv_exp_4_0,
						"org.xtext.ui23.Dsl.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFormUse
entryRuleFormUse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFormUseRule()); }
	iv_ruleFormUse=ruleFormUse
	{ $current=$iv_ruleFormUse.current; }
	EOF;

// Rule FormUse
ruleFormUse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFormUseRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFormUseAccess().getFormFormCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getFormUseAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFormUseAccess().getExpsExpParserRuleCall_2_0_0());
					}
					lv_exps_2_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFormUseRule());
						}
						add(
							$current,
							"exps",
							lv_exps_2_0,
							"org.xtext.ui23.Dsl.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getFormUseAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFormUseAccess().getExpsExpParserRuleCall_2_1_1_0());
						}
						lv_exps_4_0=ruleExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFormUseRule());
							}
							add(
								$current,
								"exps",
								lv_exps_4_0,
								"org.xtext.ui23.Dsl.Exp");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFormUseAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParameterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParameterRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"org.xtext.ui23.Dsl.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [String current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current.getText(); }
	EOF;

// Rule Type
ruleType returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='boolean'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getBooleanKeyword_0());
		}
		    |
		kw='string'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getStringKeyword_1());
		}
		    |
		kw='number'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getTypeAccess().getNumberKeyword_2());
		}
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpAccess().getBooleanParserRuleCall());
	}
	this_Boolean_0=ruleBoolean
	{
		$current = $this_Boolean_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleBoolean
entryRuleBoolean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanRule()); }
	iv_ruleBoolean=ruleBoolean
	{ $current=$iv_ruleBoolean.current; }
	EOF;

// Rule Boolean
ruleBoolean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanAccess().getEqualParserRuleCall_0());
		}
		this_Equal_0=ruleEqual
		{
			$current = $this_Equal_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getBooleanAccess().getBooleanLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='&&'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getBooleanAccess().getOpAmpersandAmpersandKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBooleanRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='||'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getBooleanAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBooleanRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanAccess().getRightEqualParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleEqual
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.ui23.Dsl.Equal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqual
entryRuleEqual returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualRule()); }
	iv_ruleEqual=ruleEqual
	{ $current=$iv_ruleEqual.current; }
	EOF;

// Rule Equal
ruleEqual returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualAccess().getCompareParserRuleCall_0());
		}
		this_Compare_0=ruleCompare
		{
			$current = $this_Compare_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getEqualAccess().getEqualLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='=='
						{
							newLeafNode(lv_op_2_1, grammarAccess.getEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='!='
						{
							newLeafNode(lv_op_2_2, grammarAccess.getEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getEqualRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualAccess().getRightCompareParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleCompare
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.ui23.Dsl.Compare");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleCompare
entryRuleCompare returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCompareRule()); }
	iv_ruleCompare=ruleCompare
	{ $current=$iv_ruleCompare.current; }
	EOF;

// Rule Compare
ruleCompare returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCompareAccess().getConcatParserRuleCall_0());
		}
		this_Concat_0=ruleConcat
		{
			$current = $this_Concat_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getCompareAccess().getCompareLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='<'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getCompareAccess().getOpLessThanSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompareRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='>'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getCompareAccess().getOpGreaterThanSignKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompareRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
						    |
						lv_op_2_3='<='
						{
							newLeafNode(lv_op_2_3, grammarAccess.getCompareAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompareRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_3, null);
						}
						    |
						lv_op_2_4='>='
						{
							newLeafNode(lv_op_2_4, grammarAccess.getCompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getCompareRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_4, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleConcat
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCompareRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.ui23.Dsl.Concat");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConcat
entryRuleConcat returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConcatRule()); }
	iv_ruleConcat=ruleConcat
	{ $current=$iv_ruleConcat.current; }
	EOF;

// Rule Concat
ruleConcat returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConcatAccess().getPlusMinusParserRuleCall_0());
		}
		this_PlusMinus_0=rulePlusMinus
		{
			$current = $this_PlusMinus_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getConcatAccess().getConcatLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='&'
			{
				newLeafNode(otherlv_2, grammarAccess.getConcatAccess().getAmpersandKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConcatAccess().getRightPlusMinusParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePlusMinus
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConcatRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.ui23.Dsl.PlusMinus");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePlusMinus
entryRulePlusMinus returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlusMinusRule()); }
	iv_rulePlusMinus=rulePlusMinus
	{ $current=$iv_rulePlusMinus.current; }
	EOF;

// Rule PlusMinus
rulePlusMinus returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPlusMinusAccess().getMultDivParserRuleCall_0());
		}
		this_MultDiv_0=ruleMultDiv
		{
			$current = $this_MultDiv_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getPlusMinusAccess().getPlusMinusLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='+'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getPlusMinusAccess().getOpPlusSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPlusMinusRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='-'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getPlusMinusAccess().getOpHyphenMinusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPlusMinusRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPlusMinusAccess().getRightMultDivParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleMultDiv
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPlusMinusRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.ui23.Dsl.MultDiv");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultDiv
entryRuleMultDiv returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultDivRule()); }
	iv_ruleMultDiv=ruleMultDiv
	{ $current=$iv_ruleMultDiv.current; }
	EOF;

// Rule MultDiv
ruleMultDiv returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultDivAccess().getPrimitiveParserRuleCall_0());
		}
		this_Primitive_0=rulePrimitive
		{
			$current = $this_Primitive_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getMultDivAccess().getMultDivLeftAction_1_0(),
						$current);
				}
			)
			(
				(
					(
						lv_op_2_1='*'
						{
							newLeafNode(lv_op_2_1, grammarAccess.getMultDivAccess().getOpAsteriskKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_1, null);
						}
						    |
						lv_op_2_2='/'
						{
							newLeafNode(lv_op_2_2, grammarAccess.getMultDivAccess().getOpSolidusKeyword_1_1_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMultDivRule());
							}
							setWithLastConsumed($current, "op", lv_op_2_2, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultDivAccess().getRightPrimitiveParserRuleCall_1_2_0());
					}
					lv_right_3_0=rulePrimitive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultDivRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.ui23.Dsl.Primitive");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimitive
entryRulePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimitiveRule()); }
	iv_rulePrimitive=rulePrimitive
	{ $current=$iv_rulePrimitive.current; }
	EOF;

// Rule Primitive
rulePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getIntConstantAction_0_0(),
						$current);
				}
			)
			(
				(
					lv_value_1_0=RULE_INT
					{
						newLeafNode(lv_value_1_0, grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_1_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getStringConstantAction_1_0(),
						$current);
				}
			)
			(
				(
					lv_value_3_0=RULE_STRING
					{
						newLeafNode(lv_value_3_0, grammarAccess.getPrimitiveAccess().getValueSTRINGTerminalRuleCall_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
						setWithLastConsumed(
							$current,
							"value",
							lv_value_3_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getNotAction_2_0(),
						$current);
				}
			)
			otherlv_5='!'
			{
				newLeafNode(otherlv_5, grammarAccess.getPrimitiveAccess().getExclamationMarkKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_2_2_0());
					}
					lv_exp_6_0=rulePrimitive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
						}
						set(
							$current,
							"exp",
							lv_exp_6_0,
							"org.xtext.ui23.Dsl.Primitive");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getLengthAction_3_0(),
						$current);
				}
			)
			otherlv_8='#'
			{
				newLeafNode(otherlv_8, grammarAccess.getPrimitiveAccess().getNumberSignKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_3_2_0());
					}
					lv_exp_9_0=rulePrimitive
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
						}
						set(
							$current,
							"exp",
							lv_exp_9_0,
							"org.xtext.ui23.Dsl.Primitive");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getTypeConstantAction_4_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveAccess().getTypeTypeParserRuleCall_4_1_0());
					}
					lv_type_11_0=ruleType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
						}
						set(
							$current,
							"type",
							lv_type_11_0,
							"org.xtext.ui23.Dsl.Type");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getVarRefAction_5_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
					}
					otherlv_13=RULE_ID
					{
						newLeafNode(otherlv_13, grammarAccess.getPrimitiveAccess().getRefCrossRefCrossReference_5_1_0());
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getFuncCallAction_6_0(),
						$current);
				}
			)
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimitiveRule());
						}
					}
					otherlv_15=RULE_ID
					{
						newLeafNode(otherlv_15, grammarAccess.getPrimitiveAccess().getRefFunctionCrossReference_6_1_0());
					}
				)
			)
			otherlv_16='('
			{
				newLeafNode(otherlv_16, grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_6_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getPrimitiveAccess().getExpsExpParserRuleCall_6_3_0_0());
						}
						lv_exps_17_0=ruleExp
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
							}
							add(
								$current,
								"exps",
								lv_exps_17_0,
								"org.xtext.ui23.Dsl.Exp");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_18=','
					{
						newLeafNode(otherlv_18, grammarAccess.getPrimitiveAccess().getCommaKeyword_6_3_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getPrimitiveAccess().getExpsExpParserRuleCall_6_3_1_1_0());
							}
							lv_exps_19_0=ruleExp
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
								}
								add(
									$current,
									"exps",
									lv_exps_19_0,
									"org.xtext.ui23.Dsl.Exp");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			otherlv_20=')'
			{
				newLeafNode(otherlv_20, grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_6_4());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPrimitiveAccess().getParenthesisAction_7_0(),
						$current);
				}
			)
			otherlv_22='('
			{
				newLeafNode(otherlv_22, grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimitiveAccess().getExpExpParserRuleCall_7_2_0());
					}
					lv_exp_23_0=ruleExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimitiveRule());
						}
						set(
							$current,
							"exp",
							lv_exp_23_0,
							"org.xtext.ui23.Dsl.Exp");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_24=')'
			{
				newLeafNode(otherlv_24, grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_7_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
