/*
 * generated by Xtext 2.29.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ui23.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui23.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.ui23.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleUI23
entryRuleUI23
:
{ before(grammarAccess.getUI23Rule()); }
	 ruleUI23
{ after(grammarAccess.getUI23Rule()); } 
	 EOF 
;

// Rule UI23
ruleUI23 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUI23Access().getGroup()); }
		(rule__UI23__Group__0)
		{ after(grammarAccess.getUI23Access().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleForm
entryRuleForm
:
{ before(grammarAccess.getFormRule()); }
	 ruleForm
{ after(grammarAccess.getFormRule()); } 
	 EOF 
;

// Rule Form
ruleForm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormAccess().getGroup()); }
		(rule__Form__Group__0)
		{ after(grammarAccess.getFormAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayout
entryRuleLayout
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutAccess().getGroup()); }
		(rule__Layout__Group__0)
		{ after(grammarAccess.getLayoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComponent
entryRuleComponent
:
{ before(grammarAccess.getComponentRule()); }
	 ruleComponent
{ after(grammarAccess.getComponentRule()); } 
	 EOF 
;

// Rule Component
ruleComponent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComponentAccess().getAlternatives()); }
		(rule__Component__Alternatives)
		{ after(grammarAccess.getComponentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInputText
entryRuleInputText
:
{ before(grammarAccess.getInputTextRule()); }
	 ruleInputText
{ after(grammarAccess.getInputTextRule()); } 
	 EOF 
;

// Rule InputText
ruleInputText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInputTextAccess().getGroup()); }
		(rule__InputText__Group__0)
		{ after(grammarAccess.getInputTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFormUse
entryRuleFormUse
:
{ before(grammarAccess.getFormUseRule()); }
	 ruleFormUse
{ after(grammarAccess.getFormUseRule()); } 
	 EOF 
;

// Rule FormUse
ruleFormUse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormUseAccess().getGroup()); }
		(rule__FormUse__Group__0)
		{ after(grammarAccess.getFormUseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getBooleanParserRuleCall()); }
		ruleBoolean
		{ after(grammarAccess.getExpAccess().getBooleanParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolean
entryRuleBoolean
:
{ before(grammarAccess.getBooleanRule()); }
	 ruleBoolean
{ after(grammarAccess.getBooleanRule()); } 
	 EOF 
;

// Rule Boolean
ruleBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanAccess().getGroup()); }
		(rule__Boolean__Group__0)
		{ after(grammarAccess.getBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqual
entryRuleEqual
:
{ before(grammarAccess.getEqualRule()); }
	 ruleEqual
{ after(grammarAccess.getEqualRule()); } 
	 EOF 
;

// Rule Equal
ruleEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualAccess().getGroup()); }
		(rule__Equal__Group__0)
		{ after(grammarAccess.getEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompare
entryRuleCompare
:
{ before(grammarAccess.getCompareRule()); }
	 ruleCompare
{ after(grammarAccess.getCompareRule()); } 
	 EOF 
;

// Rule Compare
ruleCompare 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareAccess().getGroup()); }
		(rule__Compare__Group__0)
		{ after(grammarAccess.getCompareAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConcat
entryRuleConcat
:
{ before(grammarAccess.getConcatRule()); }
	 ruleConcat
{ after(grammarAccess.getConcatRule()); } 
	 EOF 
;

// Rule Concat
ruleConcat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConcatAccess().getGroup()); }
		(rule__Concat__Group__0)
		{ after(grammarAccess.getConcatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusMinus
entryRulePlusMinus
:
{ before(grammarAccess.getPlusMinusRule()); }
	 rulePlusMinus
{ after(grammarAccess.getPlusMinusRule()); } 
	 EOF 
;

// Rule PlusMinus
rulePlusMinus 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusMinusAccess().getGroup()); }
		(rule__PlusMinus__Group__0)
		{ after(grammarAccess.getPlusMinusAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultDiv
entryRuleMultDiv
:
{ before(grammarAccess.getMultDivRule()); }
	 ruleMultDiv
{ after(grammarAccess.getMultDivRule()); } 
	 EOF 
;

// Rule MultDiv
ruleMultDiv 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultDivAccess().getGroup()); }
		(rule__MultDiv__Group__0)
		{ after(grammarAccess.getMultDivAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimitive
entryRulePrimitive
:
{ before(grammarAccess.getPrimitiveRule()); }
	 rulePrimitive
{ after(grammarAccess.getPrimitiveRule()); } 
	 EOF 
;

// Rule Primitive
rulePrimitive 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimitiveAccess().getAlternatives()); }
		(rule__Primitive__Alternatives)
		{ after(grammarAccess.getPrimitiveAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__AxisAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getAxisRowKeyword_1_0_0()); }
		'row'
		{ after(grammarAccess.getLayoutAccess().getAxisRowKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getLayoutAccess().getAxisColumnKeyword_1_0_1()); }
		'column'
		{ after(grammarAccess.getLayoutAccess().getAxisColumnKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Component__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComponentAccess().getLayoutParserRuleCall_0()); }
		ruleLayout
		{ after(grammarAccess.getComponentAccess().getLayoutParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getElementParserRuleCall_1()); }
		ruleElement
		{ after(grammarAccess.getComponentAccess().getElementParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComponentAccess().getFormUseParserRuleCall_2()); }
		ruleFormUse
		{ after(grammarAccess.getComponentAccess().getFormUseParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
		ruleLabel
		{ after(grammarAccess.getElementAccess().getLabelParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInputTextParserRuleCall_1()); }
		ruleInputText
		{ after(grammarAccess.getElementAccess().getInputTextParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getButtonParserRuleCall_2()); }
		ruleButton
		{ after(grammarAccess.getElementAccess().getButtonParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getBooleanKeyword_0()); }
		'boolean'
		{ after(grammarAccess.getTypeAccess().getBooleanKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getStringKeyword_1()); }
		'string'
		{ after(grammarAccess.getTypeAccess().getStringKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getNumberKeyword_2()); }
		'number'
		{ after(grammarAccess.getTypeAccess().getNumberKeyword_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }
		'&&'
		{ after(grammarAccess.getBooleanAccess().getOpAmpersandAmpersandKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_1()); }
		'||'
		{ after(grammarAccess.getBooleanAccess().getOpVerticalLineVerticalLineKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
		'=='
		{ after(grammarAccess.getEqualAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
		'!='
		{ after(grammarAccess.getEqualAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getOpLessThanSignKeyword_1_1_0_0()); }
		'<'
		{ after(grammarAccess.getCompareAccess().getOpLessThanSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
		'>'
		{ after(grammarAccess.getCompareAccess().getOpGreaterThanSignKeyword_1_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
		'<='
		{ after(grammarAccess.getCompareAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
		'>='
		{ after(grammarAccess.getCompareAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getOpPlusSignKeyword_1_1_0_0()); }
		'+'
		{ after(grammarAccess.getPlusMinusAccess().getOpPlusSignKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getPlusMinusAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
		'-'
		{ after(grammarAccess.getPlusMinusAccess().getOpHyphenMinusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__OpAlternatives_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
		'*'
		{ after(grammarAccess.getMultDivAccess().getOpAsteriskKeyword_1_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getMultDivAccess().getOpSolidusKeyword_1_1_0_1()); }
		'/'
		{ after(grammarAccess.getMultDivAccess().getOpSolidusKeyword_1_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_0()); }
		(rule__Primitive__Group_0__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_1()); }
		(rule__Primitive__Group_1__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_2()); }
		(rule__Primitive__Group_2__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_3()); }
		(rule__Primitive__Group_3__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_4()); }
		(rule__Primitive__Group_4__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_5()); }
		(rule__Primitive__Group_5__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_6()); }
		(rule__Primitive__Group_6__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getPrimitiveAccess().getGroup_7()); }
		(rule__Primitive__Group_7__0)
		{ after(grammarAccess.getPrimitiveAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__0__Impl
	rule__UI23__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getTitleKeyword_0()); }
	'title'
	{ after(grammarAccess.getUI23Access().getTitleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__1__Impl
	rule__UI23__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getNameAssignment_1()); }
	(rule__UI23__NameAssignment_1)
	{ after(grammarAccess.getUI23Access().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__2__Impl
	rule__UI23__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getFunctionsAssignment_2()); }
	(rule__UI23__FunctionsAssignment_2)*
	{ after(grammarAccess.getUI23Access().getFunctionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UI23__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUI23Access().getFormsAssignment_3()); }
	(rule__UI23__FormsAssignment_3)*
	{ after(grammarAccess.getUI23Access().getFormsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunctionAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__5__Impl
	rule__Function__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
	':'
	{ after(grammarAccess.getFunctionAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6()); }
	(rule__Function__ReturnTypeAssignment_6)
	{ after(grammarAccess.getFunctionAccess().getReturnTypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_3_0()); }
	(rule__Function__TypesAssignment_3_0)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_1()); }
	(rule__Function__Group_3_1__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__0__Impl
	rule__Function__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getTypesAssignment_3_1_1()); }
	(rule__Function__TypesAssignment_3_1_1)
	{ after(grammarAccess.getFunctionAccess().getTypesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__0__Impl
	rule__Form__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getFormKeyword_0()); }
	'form'
	{ after(grammarAccess.getFormAccess().getFormKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__1__Impl
	rule__Form__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getNameAssignment_1()); }
	(rule__Form__NameAssignment_1)
	{ after(grammarAccess.getFormAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__2__Impl
	rule__Form__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getGroup_2()); }
	(rule__Form__Group_2__0)?
	{ after(grammarAccess.getFormAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__3__Impl
	rule__Form__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getFormAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__4__Impl
	rule__Form__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLayoutAssignment_4()); }
	(rule__Form__LayoutAssignment_4)
	{ after(grammarAccess.getFormAccess().getLayoutAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getFormAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2__0__Impl
	rule__Form__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getFormAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2__1__Impl
	rule__Form__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getGroup_2_1()); }
	(rule__Form__Group_2_1__0)?
	{ after(grammarAccess.getFormAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getFormAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1__0__Impl
	rule__Form__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getParametersAssignment_2_1_0()); }
	(rule__Form__ParametersAssignment_2_1_0)
	{ after(grammarAccess.getFormAccess().getParametersAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getGroup_2_1_1()); }
	(rule__Form__Group_2_1_1__0)*
	{ after(grammarAccess.getFormAccess().getGroup_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Form__Group_2_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1_1__0__Impl
	rule__Form__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getCommaKeyword_2_1_1_0()); }
	','
	{ after(grammarAccess.getFormAccess().getCommaKeyword_2_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Form__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__Group_2_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormAccess().getParametersAssignment_2_1_1_1()); }
	(rule__Form__ParametersAssignment_2_1_1_1)
	{ after(grammarAccess.getFormAccess().getParametersAssignment_2_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__0__Impl
	rule__Layout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLayoutAction_0()); }
	()
	{ after(grammarAccess.getLayoutAccess().getLayoutAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__1__Impl
	rule__Layout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getAxisAssignment_1()); }
	(rule__Layout__AxisAssignment_1)
	{ after(grammarAccess.getLayoutAccess().getAxisAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__2__Impl
	rule__Layout__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getLayoutAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__3__Impl
	rule__Layout__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getComponentsAssignment_3()); }
	(rule__Layout__ComponentsAssignment_3)*
	{ after(grammarAccess.getLayoutAccess().getComponentsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getLayoutAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
	'label'
	{ after(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getLabelAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getExpAssignment_2()); }
	(rule__Label__ExpAssignment_2)
	{ after(grammarAccess.getLabelAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InputText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__0__Impl
	rule__InputText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getInputKeyword_0()); }
	'input'
	{ after(grammarAccess.getInputTextAccess().getInputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__1__Impl
	rule__InputText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getNameAssignment_1()); }
	(rule__InputText__NameAssignment_1)
	{ after(grammarAccess.getInputTextAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__2__Impl
	rule__InputText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getInputTextAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InputText__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInputTextAccess().getExpAssignment_3()); }
	(rule__InputText__ExpAssignment_3)
	{ after(grammarAccess.getInputTextAccess().getExpAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
	'button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getValidateAssignment_1()); }
	(rule__Button__ValidateAssignment_1)?
	{ after(grammarAccess.getButtonAccess().getValidateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_2()); }
	(rule__Button__NameAssignment_2)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
	rule__Button__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getButtonAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getExpAssignment_4()); }
	(rule__Button__ExpAssignment_4)
	{ after(grammarAccess.getButtonAccess().getExpAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormUse__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__0__Impl
	rule__FormUse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getFormAssignment_0()); }
	(rule__FormUse__FormAssignment_0)
	{ after(grammarAccess.getFormUseAccess().getFormAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__1__Impl
	rule__FormUse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFormUseAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__2__Impl
	rule__FormUse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getGroup_2()); }
	(rule__FormUse__Group_2__0)?
	{ after(grammarAccess.getFormUseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFormUseAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormUse__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2__0__Impl
	rule__FormUse__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getExpsAssignment_2_0()); }
	(rule__FormUse__ExpsAssignment_2_0)
	{ after(grammarAccess.getFormUseAccess().getExpsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getGroup_2_1()); }
	(rule__FormUse__Group_2_1__0)*
	{ after(grammarAccess.getFormUseAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FormUse__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2_1__0__Impl
	rule__FormUse__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getFormUseAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FormUse__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormUseAccess().getExpsAssignment_2_1_1()); }
	(rule__FormUse__ExpsAssignment_2_1_1)
	{ after(grammarAccess.getFormUseAccess().getExpsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
	(rule__Parameter__NameAssignment_0)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
	(rule__Parameter__TypeAssignment_2)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__0__Impl
	rule__Boolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getEqualParserRuleCall_0()); }
	ruleEqual
	{ after(grammarAccess.getBooleanAccess().getEqualParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getGroup_1()); }
	(rule__Boolean__Group_1__0)*
	{ after(grammarAccess.getBooleanAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Boolean__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group_1__0__Impl
	rule__Boolean__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getBooleanLeftAction_1_0()); }
	()
	{ after(grammarAccess.getBooleanAccess().getBooleanLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group_1__1__Impl
	rule__Boolean__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getOpAssignment_1_1()); }
	(rule__Boolean__OpAssignment_1_1)
	{ after(grammarAccess.getBooleanAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Boolean__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanAccess().getRightAssignment_1_2()); }
	(rule__Boolean__RightAssignment_1_2)
	{ after(grammarAccess.getBooleanAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__0__Impl
	rule__Equal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getCompareParserRuleCall_0()); }
	ruleCompare
	{ after(grammarAccess.getEqualAccess().getCompareParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getGroup_1()); }
	(rule__Equal__Group_1__0)*
	{ after(grammarAccess.getEqualAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group_1__0__Impl
	rule__Equal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getEqualLeftAction_1_0()); }
	()
	{ after(grammarAccess.getEqualAccess().getEqualLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group_1__1__Impl
	rule__Equal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getOpAssignment_1_1()); }
	(rule__Equal__OpAssignment_1_1)
	{ after(grammarAccess.getEqualAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getRightAssignment_1_2()); }
	(rule__Equal__RightAssignment_1_2)
	{ after(grammarAccess.getEqualAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__0__Impl
	rule__Compare__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getConcatParserRuleCall_0()); }
	ruleConcat
	{ after(grammarAccess.getCompareAccess().getConcatParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getGroup_1()); }
	(rule__Compare__Group_1__0)*
	{ after(grammarAccess.getCompareAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compare__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__0__Impl
	rule__Compare__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getCompareLeftAction_1_0()); }
	()
	{ after(grammarAccess.getCompareAccess().getCompareLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__1__Impl
	rule__Compare__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getOpAssignment_1_1()); }
	(rule__Compare__OpAssignment_1_1)
	{ after(grammarAccess.getCompareAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compare__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareAccess().getRightAssignment_1_2()); }
	(rule__Compare__RightAssignment_1_2)
	{ after(grammarAccess.getCompareAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__0__Impl
	rule__Concat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getPlusMinusParserRuleCall_0()); }
	rulePlusMinus
	{ after(grammarAccess.getConcatAccess().getPlusMinusParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getGroup_1()); }
	(rule__Concat__Group_1__0)*
	{ after(grammarAccess.getConcatAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Concat__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__0__Impl
	rule__Concat__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getConcatLeftAction_1_0()); }
	()
	{ after(grammarAccess.getConcatAccess().getConcatLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__1__Impl
	rule__Concat__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getAmpersandKeyword_1_1()); }
	'&'
	{ after(grammarAccess.getConcatAccess().getAmpersandKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Concat__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConcatAccess().getRightAssignment_1_2()); }
	(rule__Concat__RightAssignment_1_2)
	{ after(grammarAccess.getConcatAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__0__Impl
	rule__PlusMinus__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getMultDivParserRuleCall_0()); }
	ruleMultDiv
	{ after(grammarAccess.getPlusMinusAccess().getMultDivParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getGroup_1()); }
	(rule__PlusMinus__Group_1__0)*
	{ after(grammarAccess.getPlusMinusAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusMinus__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__0__Impl
	rule__PlusMinus__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getPlusMinusLeftAction_1_0()); }
	()
	{ after(grammarAccess.getPlusMinusAccess().getPlusMinusLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__1__Impl
	rule__PlusMinus__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getOpAssignment_1_1()); }
	(rule__PlusMinus__OpAssignment_1_1)
	{ after(grammarAccess.getPlusMinusAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusMinus__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusMinusAccess().getRightAssignment_1_2()); }
	(rule__PlusMinus__RightAssignment_1_2)
	{ after(grammarAccess.getPlusMinusAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__0__Impl
	rule__MultDiv__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getPrimitiveParserRuleCall_0()); }
	rulePrimitive
	{ after(grammarAccess.getMultDivAccess().getPrimitiveParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getGroup_1()); }
	(rule__MultDiv__Group_1__0)*
	{ after(grammarAccess.getMultDivAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MultDiv__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__0__Impl
	rule__MultDiv__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getMultDivLeftAction_1_0()); }
	()
	{ after(grammarAccess.getMultDivAccess().getMultDivLeftAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__1__Impl
	rule__MultDiv__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getOpAssignment_1_1()); }
	(rule__MultDiv__OpAssignment_1_1)
	{ after(grammarAccess.getMultDivAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MultDiv__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultDivAccess().getRightAssignment_1_2()); }
	(rule__MultDiv__RightAssignment_1_2)
	{ after(grammarAccess.getMultDivAccess().getRightAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_0__0__Impl
	rule__Primitive__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_0_1()); }
	(rule__Primitive__ValueAssignment_0_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_1__0__Impl
	rule__Primitive__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getValueAssignment_1_1()); }
	(rule__Primitive__ValueAssignment_1_1)
	{ after(grammarAccess.getPrimitiveAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__0__Impl
	rule__Primitive__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getNotAction_2_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getNotAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__1__Impl
	rule__Primitive__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExclamationMarkKeyword_2_1()); }
	'!'
	{ after(grammarAccess.getPrimitiveAccess().getExclamationMarkKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpAssignment_2_2()); }
	(rule__Primitive__ExpAssignment_2_2)
	{ after(grammarAccess.getPrimitiveAccess().getExpAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__0__Impl
	rule__Primitive__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getLengthAction_3_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getLengthAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__1__Impl
	rule__Primitive__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getNumberSignKeyword_3_1()); }
	'#'
	{ after(grammarAccess.getPrimitiveAccess().getNumberSignKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpAssignment_3_2()); }
	(rule__Primitive__ExpAssignment_3_2)
	{ after(grammarAccess.getPrimitiveAccess().getExpAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_4__0__Impl
	rule__Primitive__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getTypeConstantAction_4_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getTypeConstantAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getTypeAssignment_4_1()); }
	(rule__Primitive__TypeAssignment_4_1)
	{ after(grammarAccess.getPrimitiveAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_5__0__Impl
	rule__Primitive__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getVarRefAction_5_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getVarRefAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRefAssignment_5_1()); }
	(rule__Primitive__RefAssignment_5_1)
	{ after(grammarAccess.getPrimitiveAccess().getRefAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__0__Impl
	rule__Primitive__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getFuncCallAction_6_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getFuncCallAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__1__Impl
	rule__Primitive__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRefAssignment_6_1()); }
	(rule__Primitive__RefAssignment_6_1)
	{ after(grammarAccess.getPrimitiveAccess().getRefAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__2__Impl
	rule__Primitive__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_6_2()); }
	'('
	{ after(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__3__Impl
	rule__Primitive__Group_6__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getGroup_6_3()); }
	(rule__Primitive__Group_6_3__0)?
	{ after(grammarAccess.getPrimitiveAccess().getGroup_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_6_4()); }
	')'
	{ after(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_6_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_6_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6_3__0__Impl
	rule__Primitive__Group_6_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpsAssignment_6_3_0()); }
	(rule__Primitive__ExpsAssignment_6_3_0)
	{ after(grammarAccess.getPrimitiveAccess().getExpsAssignment_6_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getGroup_6_3_1()); }
	(rule__Primitive__Group_6_3_1__0)*
	{ after(grammarAccess.getPrimitiveAccess().getGroup_6_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_6_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6_3_1__0__Impl
	rule__Primitive__Group_6_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getCommaKeyword_6_3_1_0()); }
	','
	{ after(grammarAccess.getPrimitiveAccess().getCommaKeyword_6_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_6_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_6_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpsAssignment_6_3_1_1()); }
	(rule__Primitive__ExpsAssignment_6_3_1_1)
	{ after(grammarAccess.getPrimitiveAccess().getExpsAssignment_6_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Primitive__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__0__Impl
	rule__Primitive__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getParenthesisAction_7_0()); }
	()
	{ after(grammarAccess.getPrimitiveAccess().getParenthesisAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__1__Impl
	rule__Primitive__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_7_1()); }
	'('
	{ after(grammarAccess.getPrimitiveAccess().getLeftParenthesisKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__2__Impl
	rule__Primitive__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getExpAssignment_7_2()); }
	(rule__Primitive__ExpAssignment_7_2)
	{ after(grammarAccess.getPrimitiveAccess().getExpAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Primitive__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_7_3()); }
	')'
	{ after(grammarAccess.getPrimitiveAccess().getRightParenthesisKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UI23__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUI23Access().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getUI23Access().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__FunctionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUI23Access().getFunctionsFunctionParserRuleCall_2_0()); }
		ruleFunction
		{ after(grammarAccess.getUI23Access().getFunctionsFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UI23__FormsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUI23Access().getFormsFormParserRuleCall_3_0()); }
		ruleForm
		{ after(grammarAccess.getUI23Access().getFormsFormParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getTypesTypeParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__ReturnTypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getReturnTypeTypeParserRuleCall_6_0()); }
		ruleType
		{ after(grammarAccess.getFunctionAccess().getReturnTypeTypeParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFormAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__ParametersAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
		ruleParameter
		{ after(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__ParametersAssignment_2_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
		ruleParameter
		{ after(grammarAccess.getFormAccess().getParametersParameterParserRuleCall_2_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Form__LayoutAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_4_0()); }
		ruleLayout
		{ after(grammarAccess.getFormAccess().getLayoutLayoutParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__AxisAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getAxisAlternatives_1_0()); }
		(rule__Layout__AxisAlternatives_1_0)
		{ after(grammarAccess.getLayoutAccess().getAxisAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__ComponentsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getComponentsComponentParserRuleCall_3_0()); }
		ruleComponent
		{ after(grammarAccess.getLayoutAccess().getComponentsComponentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getExpExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getLabelAccess().getExpExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTextAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getInputTextAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InputText__ExpAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInputTextAccess().getExpExpParserRuleCall_3_0()); }
		ruleExp
		{ after(grammarAccess.getInputTextAccess().getExpExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ValidateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getValidateAsteriskKeyword_1_0()); }
		(
			{ before(grammarAccess.getButtonAccess().getValidateAsteriskKeyword_1_0()); }
			'*'
			{ after(grammarAccess.getButtonAccess().getValidateAsteriskKeyword_1_0()); }
		)
		{ after(grammarAccess.getButtonAccess().getValidateAsteriskKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__ExpAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getExpExpParserRuleCall_4_0()); }
		ruleExp
		{ after(grammarAccess.getButtonAccess().getExpExpParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__FormAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormUseAccess().getFormFormCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFormUseAccess().getFormFormIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFormUseAccess().getFormFormIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFormUseAccess().getFormFormCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__ExpsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormUseAccess().getExpsExpParserRuleCall_2_0_0()); }
		ruleExp
		{ after(grammarAccess.getFormUseAccess().getExpsExpParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FormUse__ExpsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormUseAccess().getExpsExpParserRuleCall_2_1_1_0()); }
		ruleExp
		{ after(grammarAccess.getFormUseAccess().getExpsExpParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
		ruleType
		{ after(grammarAccess.getParameterAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getOpAlternatives_1_1_0()); }
		(rule__Boolean__OpAlternatives_1_1_0)
		{ after(grammarAccess.getBooleanAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Boolean__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanAccess().getRightEqualParserRuleCall_1_2_0()); }
		ruleEqual
		{ after(grammarAccess.getBooleanAccess().getRightEqualParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getOpAlternatives_1_1_0()); }
		(rule__Equal__OpAlternatives_1_1_0)
		{ after(grammarAccess.getEqualAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getRightCompareParserRuleCall_1_2_0()); }
		ruleCompare
		{ after(grammarAccess.getEqualAccess().getRightCompareParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getOpAlternatives_1_1_0()); }
		(rule__Compare__OpAlternatives_1_1_0)
		{ after(grammarAccess.getCompareAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compare__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_2_0()); }
		ruleConcat
		{ after(grammarAccess.getCompareAccess().getRightConcatParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Concat__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConcatAccess().getRightPlusMinusParserRuleCall_1_2_0()); }
		rulePlusMinus
		{ after(grammarAccess.getConcatAccess().getRightPlusMinusParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getOpAlternatives_1_1_0()); }
		(rule__PlusMinus__OpAlternatives_1_1_0)
		{ after(grammarAccess.getPlusMinusAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusMinus__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusMinusAccess().getRightMultDivParserRuleCall_1_2_0()); }
		ruleMultDiv
		{ after(grammarAccess.getPlusMinusAccess().getRightMultDivParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getOpAlternatives_1_1_0()); }
		(rule__MultDiv__OpAlternatives_1_1_0)
		{ after(grammarAccess.getMultDivAccess().getOpAlternatives_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MultDiv__RightAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultDivAccess().getRightPrimitiveParserRuleCall_1_2_0()); }
		rulePrimitive
		{ after(grammarAccess.getMultDivAccess().getRightPrimitiveParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getPrimitiveAccess().getValueINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getPrimitiveAccess().getValueSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_2_2_0()); }
		rulePrimitive
		{ after(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_3_2_0()); }
		rulePrimitive
		{ after(grammarAccess.getPrimitiveAccess().getExpPrimitiveParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getTypeTypeParserRuleCall_4_1_0()); }
		ruleType
		{ after(grammarAccess.getPrimitiveAccess().getTypeTypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__RefAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getRefCrossRefCrossReference_5_1_0()); }
		(
			{ before(grammarAccess.getPrimitiveAccess().getRefCrossRefIDTerminalRuleCall_5_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimitiveAccess().getRefCrossRefIDTerminalRuleCall_5_1_0_1()); }
		)
		{ after(grammarAccess.getPrimitiveAccess().getRefCrossRefCrossReference_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__RefAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getRefFunctionCrossReference_6_1_0()); }
		(
			{ before(grammarAccess.getPrimitiveAccess().getRefFunctionIDTerminalRuleCall_6_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPrimitiveAccess().getRefFunctionIDTerminalRuleCall_6_1_0_1()); }
		)
		{ after(grammarAccess.getPrimitiveAccess().getRefFunctionCrossReference_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpsAssignment_6_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpsExpParserRuleCall_6_3_0_0()); }
		ruleExp
		{ after(grammarAccess.getPrimitiveAccess().getExpsExpParserRuleCall_6_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpsAssignment_6_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpsExpParserRuleCall_6_3_1_1_0()); }
		ruleExp
		{ after(grammarAccess.getPrimitiveAccess().getExpsExpParserRuleCall_6_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primitive__ExpAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimitiveAccess().getExpExpParserRuleCall_7_2_0()); }
		ruleExp
		{ after(grammarAccess.getPrimitiveAccess().getExpExpParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
