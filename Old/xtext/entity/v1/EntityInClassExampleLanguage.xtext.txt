grammar dk.sdu.mmmi.mdsd.EntityInClassExampleLanguage with org.eclipse.xtext.common.Terminals

generate entityInClassExampleLanguage "http://www.sdu.dk/mmmi/mdsd/EntityInClassExampleLanguage"

EntityModel:
	declarations+=Declaration*
;

Declaration:
	Type | ExternalDef | Entity
;

Type:
	'type' name=ID
;
	
ExternalDef:
	'external' name=ID '(' parameters+=Parameter (',' parameters+=Parameter)* ')'
;

Parameter:
	type=ID varName=ID
;
Entity:
	'entity' name=ID (':' zuper=[Entity])? '{' members+=Member* '}'
;

Member:
	Attribute | Relation | Require
;

Attribute:
	name=ID ':' type=[Type]
;

Relation:
	'relation' name=ID ':' (isMultiple?='*')? typeName=[Entity] ('inverse' inverse_name=ID)?
;

Require:
	'require' requirement=LogicExp
;

LogicExp returns Proposition:
	Conjunction ('||' {Disjunction.left=current} right=Conjunction)* 
;

Conjunction returns Proposition:
	Condition ('&&' {Conjunction.left=current} right=Condition)*
;

Condition returns Proposition:
	ExternalUse | Comparison //| '(' LogicExp ')'
;

ExternalUse:
	external=[ExternalDef] '(' arguments+=ID (',' arguments+=ID)* ')'
;

Comparison:
	left=Exp op=RelationalOp right=Exp
;

RelationalOp:
	{RelEQ} '=' | {RelLT} '<' | {RelGT} '>' | {RelLTE} '<=' | {RelGTE} '>='
;

Exp returns Expression:
	Factor ( ('+' {Add.left=current} | '-' {Sub.left=current}) right=Factor)*
;

Factor returns Expression:
	Primitive ( ('*' {Mul.left=current} | '/' {Div.left=current}) right=Primitive)*
;

Primitive returns Expression:
	Name | IntExp | '(' Exp ')' | Sum | SizeOf
;

Name:
	varName=ID
;

IntExp:
	value=INT
;

Sum:
	'sum' field=ID '.' selector=ID
;

SizeOf:
	'sizeof' field=ID
;
