/*
 * generated by Xtext 2.12.0
 */
package dk.sdu.mmmi.mdsd.tests

import com.google.inject.Inject
import dk.sdu.mmmi.mdsd.entityInClassExampleLanguage.EntityModel
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import dk.sdu.mmmi.mdsd.entityInClassExampleLanguage.Type
import org.junit.FixMethodOrder
import org.junit.runners.MethodSorters

@RunWith(XtextRunner)
@InjectWith(EntityInClassExampleLanguageInjectorProvider)
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
class EntityInClassExampleLanguageParsingTest {
	@Inject
	ParseHelper<EntityModel> parseHelper
	
	@Test
	def void T00_loadModel() {
		val result = parseHelper.parse('''
			type int
		''')
		Assert.assertNotNull(result)
		Assert.assertTrue(result.eResource.errors.isEmpty)
	}

	@Test
	def void T01_parseBasicTypeDecl() {
		val result = parseHelper.parse('''
			type int
		''')
		Assert.assertNotNull(result.declarations)
		Assert.assertEquals(result.declarations.size,1)
		Assert.assertTrue(result.declarations.get(0) instanceof Type)
		val t = result.declarations.get(0) as Type
		Assert.assertEquals(t.name,"int")
	}

}
